
gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 11                	add    %dl,(%rcx)
 2d5:	58                   	pop    %rax
 2d6:	ac                   	lods   %ds:(%rsi),%al
 2d7:	2e bb be 44 8c 2b    	cs mov $0x2b8c44be,%ebx
 2dd:	39 41 e0             	cmp    %eax,-0x20(%rcx)
 2e0:	b7 a9                	mov    $0xa9,%bh
 2e2:	e8 2d b2 63 32       	callq  3263b514 <_end+0x32637464>
 2e7:	d1                   	.byte 0xd1

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__offload_func_table+0x9>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__offload_func_table+0x14>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__offload_func_table+0x17>
    2036:	74 69                	je     20a1 <__offload_func_table+0x21>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__offload_func_table+0x20>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__offload_func_table+0x3d>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__offload_func_table+0xd>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__offload_func_table+0x4c>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi

0000000000002080 <__offload_func_table>:
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__offload_func_table+0x52>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__offload_func_table+0xd7>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__offload_func_table+0x107>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__offload_func_table+0x166>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__offload_func_table+0x236>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__offload_func_table+0x353>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 11                	add    %dl,(%rcx)
 2d5:	58                   	pop    %rax
 2d6:	ac                   	lods   %ds:(%rsi),%al
 2d7:	2e bb be 44 8c 2b    	cs mov $0x2b8c44be,%ebx
 2dd:	39 41 e0             	cmp    %eax,-0x20(%rcx)
 2e0:	b7 a9                	mov    $0xa9,%bh
 2e2:	e8 2d b2 63 32       	callq  3263b514 <_end+0x32637464>
 2e7:	d1                   	.byte 0xd1

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__offload_func_table+0x9>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__offload_func_table+0x14>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__offload_func_table+0x17>
    2036:	74 69                	je     20a1 <__offload_func_table+0x21>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__offload_func_table+0x20>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__offload_func_table+0x3d>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__offload_func_table+0xd>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__offload_func_table+0x4c>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi

0000000000002080 <__offload_func_table>:
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__offload_func_table+0x52>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__offload_func_table+0xd7>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__offload_func_table+0x107>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__offload_func_table+0x166>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__offload_func_table+0x236>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__offload_func_table+0x353>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 11                	add    %dl,(%rcx)
 2d5:	58                   	pop    %rax
 2d6:	ac                   	lods   %ds:(%rsi),%al
 2d7:	2e bb be 44 8c 2b    	cs mov $0x2b8c44be,%ebx
 2dd:	39 41 e0             	cmp    %eax,-0x20(%rcx)
 2e0:	b7 a9                	mov    $0xa9,%bh
 2e2:	e8 2d b2 63 32       	callq  3263b514 <_end+0x32637464>
 2e7:	d1                   	.byte 0xd1

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__offload_func_table+0x9>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__offload_func_table+0x14>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__offload_func_table+0x17>
    2036:	74 69                	je     20a1 <__offload_func_table+0x21>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__offload_func_table+0x20>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__offload_func_table+0x3d>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__offload_func_table+0xd>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__offload_func_table+0x4c>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi

0000000000002080 <__offload_func_table>:
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__offload_func_table+0x52>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__offload_func_table+0xd7>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__offload_func_table+0x107>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__offload_func_table+0x166>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__offload_func_table+0x236>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__offload_func_table+0x353>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 11                	add    %dl,(%rcx)
 2d5:	58                   	pop    %rax
 2d6:	ac                   	lods   %ds:(%rsi),%al
 2d7:	2e bb be 44 8c 2b    	cs mov $0x2b8c44be,%ebx
 2dd:	39 41 e0             	cmp    %eax,-0x20(%rcx)
 2e0:	b7 a9                	mov    $0xa9,%bh
 2e2:	e8 2d b2 63 32       	callq  3263b514 <_end+0x32637464>
 2e7:	d1                   	.byte 0xd1

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__offload_func_table+0x9>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__offload_func_table+0x14>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__offload_func_table+0x17>
    2036:	74 69                	je     20a1 <__offload_func_table+0x21>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__offload_func_table+0x20>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__offload_func_table+0x3d>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__offload_func_table+0xd>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__offload_func_table+0x4c>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi

0000000000002080 <__offload_func_table>:
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__offload_func_table+0x52>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__offload_func_table+0xd7>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__offload_func_table+0x107>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__offload_func_table+0x166>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__offload_func_table+0x236>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__offload_func_table+0x353>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 11                	add    %dl,(%rcx)
 2d5:	58                   	pop    %rax
 2d6:	ac                   	lods   %ds:(%rsi),%al
 2d7:	2e bb be 44 8c 2b    	cs mov $0x2b8c44be,%ebx
 2dd:	39 41 e0             	cmp    %eax,-0x20(%rcx)
 2e0:	b7 a9                	mov    $0xa9,%bh
 2e2:	e8 2d b2 63 32       	callq  3263b514 <_end+0x32637464>
 2e7:	d1                   	.byte 0xd1

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__offload_func_table+0x9>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__offload_func_table+0x14>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__offload_func_table+0x17>
    2036:	74 69                	je     20a1 <__offload_func_table+0x21>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__offload_func_table+0x20>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__offload_func_table+0x3d>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__offload_func_table+0xd>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__offload_func_table+0x4c>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi

0000000000002080 <__offload_func_table>:
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__offload_func_table+0x52>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__offload_func_table+0xd7>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__offload_func_table+0x107>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__offload_func_table+0x166>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__offload_func_table+0x236>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__offload_func_table+0x353>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 41 89             	add    %al,-0x77(%rcx)
 2d6:	44 75 af             	rex.R jne 288 <_init-0xd78>
 2d9:	fc                   	cld    
 2da:	68 bc 71 91 ca       	pushq  $0xffffffffca9171bc
 2df:	3f                   	(bad)  
 2e0:	84 dd                	test   %bl,%ch
 2e2:	18 49 2c             	sbb    %cl,0x2c(%rcx)
 2e5:	2a                   	.byte 0x2a
 2e6:	88                   	.byte 0x88
 2e7:	93                   	xchg   %eax,%ebx

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 5a 0d 00 00 	lea    0xd5a(%rip),%r8        # 1eb0 <__libc_csu_fini>
    1156:	48 8d 0d f3 0c 00 00 	lea    0xcf3(%rip),%rcx        # 1e50 <__libc_csu_init>
    115d:	48 8d 3d f0 04 00 00 	lea    0x4f0(%rip),%rdi        # 1654 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	66 0f ef c9          	pxor   %xmm1,%xmm1
    1246:	f2 48 0f 2a ca       	cvtsi2sd %rdx,%xmm1
    124b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124f:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1253:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1257:	48 8b 40 08          	mov    0x8(%rax),%rax
    125b:	48 29 c2             	sub    %rax,%rdx
    125e:	66 0f ef c0          	pxor   %xmm0,%xmm0
    1262:	f2 48 0f 2a c2       	cvtsi2sd %rdx,%xmm0
    1267:	f2 0f 10 15 f1 0d 00 	movsd  0xdf1(%rip),%xmm2        # 2060 <_IO_stdin_used+0x60>
    126e:	00 
    126f:	f2 0f 5e c2          	divsd  %xmm2,%xmm0
    1273:	f2 0f 58 c1          	addsd  %xmm1,%xmm0
    1277:	f2 0f 5a c0          	cvtsd2ss %xmm0,%xmm0
    127b:	5d                   	pop    %rbp
    127c:	c3                   	retq   

000000000000127d <write_times>:
    127d:	55                   	push   %rbp
    127e:	48 89 e5             	mov    %rsp,%rbp
    1281:	48 83 ec 30          	sub    $0x30,%rsp
    1285:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1289:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    1290:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1293:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1297:	48 89 c1             	mov    %rax,%rcx
    129a:	ba 08 00 00 00       	mov    $0x8,%edx
    129f:	be 01 00 00 00       	mov    $0x1,%esi
    12a4:	48 8d 3d 5d 0d 00 00 	lea    0xd5d(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12ab:	e8 60 fe ff ff       	callq  1110 <fwrite@plt>
    12b0:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b4:	48 8b 10             	mov    (%rax),%rdx
    12b7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12bb:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c3:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cf:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d6:	e9 86 00 00 00       	jmpq   1361 <write_times+0xe4>
    12db:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12df:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e7:	48 8b 40 10          	mov    0x10(%rax),%rax
    12eb:	48 89 d6             	mov    %rdx,%rsi
    12ee:	48 89 c7             	mov    %rax,%rdi
    12f1:	e8 2f ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f6:	66 0f 7e c0          	movd   %xmm0,%eax
    12fa:	66 0f ef c0          	pxor   %xmm0,%xmm0
    12fe:	f3 0f 2a 45 e0       	cvtsi2ssl -0x20(%rbp),%xmm0
    1303:	66 0f 6e c8          	movd   %eax,%xmm1
    1307:	f3 0f 5e c8          	divss  %xmm0,%xmm1
    130b:	66 0f ef d2          	pxor   %xmm2,%xmm2
    130f:	f3 0f 5a d1          	cvtss2sd %xmm1,%xmm2
    1313:	66 48 0f 7e d2       	movq   %xmm2,%rdx
    1318:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    131c:	66 48 0f 6e c2       	movq   %rdx,%xmm0
    1321:	48 8d 35 e9 0c 00 00 	lea    0xce9(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1328:	48 89 c7             	mov    %rax,%rdi
    132b:	b8 01 00 00 00       	mov    $0x1,%eax
    1330:	e8 8b fd ff ff       	callq  10c0 <fprintf@plt>
    1335:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1339:	48 8b 40 10          	mov    0x10(%rax),%rax
    133d:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1345:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1349:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    134d:	48 8b 40 18          	mov    0x18(%rax),%rax
    1351:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1355:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1359:	48 89 50 18          	mov    %rdx,0x18(%rax)
    135d:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1361:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1364:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1367:	0f 8c 6e ff ff ff    	jl     12db <write_times+0x5e>
    136d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1371:	48 8b 00             	mov    (%rax),%rax
    1374:	48 89 c7             	mov    %rax,%rdi
    1377:	e8 b4 fc ff ff       	callq  1030 <free@plt>
    137c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1380:	48 8b 40 08          	mov    0x8(%rax),%rax
    1384:	48 89 c7             	mov    %rax,%rdi
    1387:	e8 a4 fc ff ff       	callq  1030 <free@plt>
    138c:	90                   	nop
    138d:	c9                   	leaveq 
    138e:	c3                   	retq   

000000000000138f <visualize>:
    138f:	55                   	push   %rbp
    1390:	48 89 e5             	mov    %rsp,%rbp
    1393:	48 83 ec 50          	sub    $0x50,%rsp
    1397:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    139b:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    139e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a2:	89 c1                	mov    %eax,%ecx
    13a4:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13a8:	ba 00 00 00 00       	mov    $0x0,%edx
    13ad:	89 ce                	mov    %ecx,%esi
    13af:	89 c7                	mov    %eax,%edi
    13b1:	e8 6a 09 00 00       	callq  1d20 <init_board>
    13b6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13ba:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13be:	89 c1                	mov    %eax,%ecx
    13c0:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13c4:	ba 00 00 00 00       	mov    $0x0,%edx
    13c9:	89 ce                	mov    %ecx,%esi
    13cb:	89 c7                	mov    %eax,%edi
    13cd:	e8 4e 09 00 00       	callq  1d20 <init_board>
    13d2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13d6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13dd:	eb 64                	jmp    1443 <visualize+0xb4>
    13df:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13e2:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13e6:	89 d1                	mov    %edx,%ecx
    13e8:	48 8d 15 29 0c 00 00 	lea    0xc29(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13ef:	be 14 00 00 00       	mov    $0x14,%esi
    13f4:	48 89 c7             	mov    %rax,%rdi
    13f7:	b8 00 00 00 00       	mov    $0x0,%eax
    13fc:	e8 7f fc ff ff       	callq  1080 <snprintf@plt>
    1401:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    1405:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1409:	48 89 d6             	mov    %rdx,%rsi
    140c:	48 89 c7             	mov    %rax,%rdi
    140f:	e8 b4 03 00 00       	callq  17c8 <create_pbm>
    1414:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1418:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    141c:	48 89 d6             	mov    %rdx,%rsi
    141f:	48 89 c7             	mov    %rax,%rdi
    1422:	e8 54 08 00 00       	callq  1c7b <update_board>
    1427:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    142b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    142f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1433:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1437:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    143b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    143f:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1443:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1446:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1449:	7c 94                	jl     13df <visualize+0x50>
    144b:	90                   	nop
    144c:	90                   	nop
    144d:	c9                   	leaveq 
    144e:	c3                   	retq   

000000000000144f <measure>:
    144f:	55                   	push   %rbp
    1450:	48 89 e5             	mov    %rsp,%rbp
    1453:	48 83 ec 50          	sub    $0x50,%rsp
    1457:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    145b:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    145e:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1461:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1465:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1468:	48 98                	cltq   
    146a:	48 c1 e0 04          	shl    $0x4,%rax
    146e:	48 89 c7             	mov    %rax,%rdi
    1471:	e8 6a fc ff ff       	callq  10e0 <malloc@plt>
    1476:	48 89 c2             	mov    %rax,%rdx
    1479:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    147d:	48 89 10             	mov    %rdx,(%rax)
    1480:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1483:	48 98                	cltq   
    1485:	48 c1 e0 04          	shl    $0x4,%rax
    1489:	48 89 c7             	mov    %rax,%rdi
    148c:	e8 4f fc ff ff       	callq  10e0 <malloc@plt>
    1491:	48 89 c2             	mov    %rax,%rdx
    1494:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1498:	48 89 50 08          	mov    %rdx,0x8(%rax)
    149c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a0:	48 8b 10             	mov    (%rax),%rdx
    14a3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a7:	48 89 50 10          	mov    %rdx,0x10(%rax)
    14ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14af:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14b3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14b7:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14bb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bf:	48 0f af c0          	imul   %rax,%rax
    14c3:	48 c1 e8 03          	shr    $0x3,%rax
    14c7:	89 c2                	mov    %eax,%edx
    14c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14cd:	89 c1                	mov    %eax,%ecx
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	89 ce                	mov    %ecx,%esi
    14d5:	89 c7                	mov    %eax,%edi
    14d7:	e8 44 08 00 00       	callq  1d20 <init_board>
    14dc:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14e0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e4:	48 0f af c0          	imul   %rax,%rax
    14e8:	48 c1 e8 03          	shr    $0x3,%rax
    14ec:	89 c2                	mov    %eax,%edx
    14ee:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f2:	89 c1                	mov    %eax,%ecx
    14f4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14f8:	89 ce                	mov    %ecx,%esi
    14fa:	89 c7                	mov    %eax,%edi
    14fc:	e8 1f 08 00 00       	callq  1d20 <init_board>
    1501:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1505:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    150c:	e9 a6 00 00 00       	jmpq   15b7 <measure+0x168>
    1511:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1515:	48 89 c7             	mov    %rax,%rdi
    1518:	e8 59 04 00 00       	callq  1976 <create_board_copy>
    151d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1521:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1525:	48 8b 40 10          	mov    0x10(%rax),%rax
    1529:	48 89 c6             	mov    %rax,%rsi
    152c:	bf 01 00 00 00       	mov    $0x1,%edi
    1531:	e8 1a fb ff ff       	callq  1050 <clock_gettime@plt>
    1536:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    153d:	eb 2f                	jmp    156e <measure+0x11f>
    153f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1543:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1547:	48 89 d6             	mov    %rdx,%rsi
    154a:	48 89 c7             	mov    %rax,%rdi
    154d:	e8 29 07 00 00       	callq  1c7b <update_board>
    1552:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1556:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    155a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    155e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1562:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1566:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    156a:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    156e:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1571:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1574:	7c c9                	jl     153f <measure+0xf0>
    1576:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157a:	48 8b 40 18          	mov    0x18(%rax),%rax
    157e:	48 89 c6             	mov    %rax,%rsi
    1581:	bf 01 00 00 00       	mov    $0x1,%edi
    1586:	e8 c5 fa ff ff       	callq  1050 <clock_gettime@plt>
    158b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158f:	48 8b 40 10          	mov    0x10(%rax),%rax
    1593:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1597:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159b:	48 89 50 10          	mov    %rdx,0x10(%rax)
    159f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15a3:	48 8b 40 18          	mov    0x18(%rax),%rax
    15a7:	48 8d 50 10          	lea    0x10(%rax),%rdx
    15ab:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15af:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15b3:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15b7:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15ba:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15bd:	0f 8c 4e ff ff ff    	jl     1511 <measure+0xc2>
    15c3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c7:	48 8b 10             	mov    (%rax),%rdx
    15ca:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15ce:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15d2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15d6:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15da:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15de:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15e2:	90                   	nop
    15e3:	c9                   	leaveq 
    15e4:	c3                   	retq   

00000000000015e5 <concat>:
    15e5:	55                   	push   %rbp
    15e6:	48 89 e5             	mov    %rsp,%rbp
    15e9:	53                   	push   %rbx
    15ea:	48 83 ec 28          	sub    $0x28,%rsp
    15ee:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15f2:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15fa:	48 89 c7             	mov    %rax,%rdi
    15fd:	e8 6e fa ff ff       	callq  1070 <strlen@plt>
    1602:	48 89 c3             	mov    %rax,%rbx
    1605:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    1609:	48 89 c7             	mov    %rax,%rdi
    160c:	e8 5f fa ff ff       	callq  1070 <strlen@plt>
    1611:	48 01 d8             	add    %rbx,%rax
    1614:	48 83 c0 01          	add    $0x1,%rax
    1618:	48 89 c7             	mov    %rax,%rdi
    161b:	e8 c0 fa ff ff       	callq  10e0 <malloc@plt>
    1620:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1624:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1628:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162c:	48 89 d6             	mov    %rdx,%rsi
    162f:	48 89 c7             	mov    %rax,%rdi
    1632:	e8 09 fa ff ff       	callq  1040 <strcpy@plt>
    1637:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    163b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163f:	48 89 d6             	mov    %rdx,%rsi
    1642:	48 89 c7             	mov    %rax,%rdi
    1645:	e8 b6 fa ff ff       	callq  1100 <strcat@plt>
    164a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    164e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1652:	c9                   	leaveq 
    1653:	c3                   	retq   

0000000000001654 <main>:
    1654:	55                   	push   %rbp
    1655:	48 89 e5             	mov    %rsp,%rbp
    1658:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    165f:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1665:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    166c:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1673:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    167a:	00 00 00 
    167d:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1684:	00 00 00 
    1687:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    168e:	00 00 00 
    1691:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1698:	00 00 00 
    169b:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    16a2:	00 00 00 
    16a5:	48 8d 35 7d 09 00 00 	lea    0x97d(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    16ac:	48 8d 3d 7a 09 00 00 	lea    0x97a(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16b3:	e8 2d ff ff ff       	callq  15e5 <concat>
    16b8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16bc:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16c2:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16cc:	89 c6                	mov    %eax,%esi
    16ce:	bf 80 00 00 00       	mov    $0x80,%edi
    16d3:	e8 77 fd ff ff       	callq  144f <measure>
    16d8:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16de:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16e5:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16e9:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16ec:	89 c6                	mov    %eax,%esi
    16ee:	bf 00 02 00 00       	mov    $0x200,%edi
    16f3:	e8 57 fd ff ff       	callq  144f <measure>
    16f8:	48 8d 35 42 09 00 00 	lea    0x942(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ff:	48 8d 3d 48 09 00 00 	lea    0x948(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1706:	e8 da fe ff ff       	callq  15e5 <concat>
    170b:	48 89 c2             	mov    %rax,%rdx
    170e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1712:	48 89 d6             	mov    %rdx,%rsi
    1715:	48 89 c7             	mov    %rax,%rdi
    1718:	e8 c8 fe ff ff       	callq  15e5 <concat>
    171d:	48 8d 35 2c 09 00 00 	lea    0x92c(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1724:	48 89 c7             	mov    %rax,%rdi
    1727:	e8 c4 f9 ff ff       	callq  10f0 <fopen@plt>
    172c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1730:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1736:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    173d:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1740:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1744:	48 89 c7             	mov    %rax,%rdi
    1747:	e8 31 fb ff ff       	callq  127d <write_times>
    174c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1750:	48 89 c7             	mov    %rax,%rdi
    1753:	e8 08 f9 ff ff       	callq  1060 <fclose@plt>
    1758:	48 8d 35 f3 08 00 00 	lea    0x8f3(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    175f:	48 8d 3d e8 08 00 00 	lea    0x8e8(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1766:	e8 7a fe ff ff       	callq  15e5 <concat>
    176b:	48 89 c2             	mov    %rax,%rdx
    176e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1772:	48 89 d6             	mov    %rdx,%rsi
    1775:	48 89 c7             	mov    %rax,%rdi
    1778:	e8 68 fe ff ff       	callq  15e5 <concat>
    177d:	48 8d 35 cc 08 00 00 	lea    0x8cc(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1784:	48 89 c7             	mov    %rax,%rdi
    1787:	e8 64 f9 ff ff       	callq  10f0 <fopen@plt>
    178c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1790:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1796:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    179d:	48 8d 78 20          	lea    0x20(%rax),%rdi
    17a1:	8b 75 fc             	mov    -0x4(%rbp),%esi
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	89 d1                	mov    %edx,%ecx
    17aa:	48 89 fa             	mov    %rdi,%rdx
    17ad:	48 89 c7             	mov    %rax,%rdi
    17b0:	e8 c8 fa ff ff       	callq  127d <write_times>
    17b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17b9:	48 89 c7             	mov    %rax,%rdi
    17bc:	e8 9f f8 ff ff       	callq  1060 <fclose@plt>
    17c1:	b8 00 00 00 00       	mov    $0x0,%eax
    17c6:	c9                   	leaveq 
    17c7:	c3                   	retq   

00000000000017c8 <create_pbm>:
    17c8:	55                   	push   %rbp
    17c9:	48 89 e5             	mov    %rsp,%rbp
    17cc:	48 83 ec 30          	sub    $0x30,%rsp
    17d0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17d4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17d8:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17df:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17e3:	48 8d 35 7e 08 00 00 	lea    0x87e(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17ea:	48 89 c7             	mov    %rax,%rdi
    17ed:	e8 fe f8 ff ff       	callq  10f0 <fopen@plt>
    17f2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17fa:	48 89 c1             	mov    %rax,%rcx
    17fd:	ba 03 00 00 00       	mov    $0x3,%edx
    1802:	be 01 00 00 00       	mov    $0x1,%esi
    1807:	48 8d 3d 5d 08 00 00 	lea    0x85d(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    180e:	e8 fd f8 ff ff       	callq  1110 <fwrite@plt>
    1813:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1817:	8b 00                	mov    (%rax),%eax
    1819:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    181d:	89 c1                	mov    %eax,%ecx
    181f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1823:	8b 40 04             	mov    0x4(%rax),%eax
    1826:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    182a:	89 c2                	mov    %eax,%edx
    182c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1830:	48 8d 35 38 08 00 00 	lea    0x838(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1837:	48 89 c7             	mov    %rax,%rdi
    183a:	b8 00 00 00 00       	mov    $0x0,%eax
    183f:	e8 7c f8 ff ff       	callq  10c0 <fprintf@plt>
    1844:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    184b:	e9 94 00 00 00       	jmpq   18e4 <create_pbm+0x11c>
    1850:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1857:	eb 7b                	jmp    18d4 <create_pbm+0x10c>
    1859:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1860:	eb 51                	jmp    18b3 <create_pbm+0xeb>
    1862:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1869:	eb 3c                	jmp    18a7 <create_pbm+0xdf>
    186b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    186f:	8b 40 04             	mov    0x4(%rax),%eax
    1872:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1876:	89 c2                	mov    %eax,%edx
    1878:	8b 45 f8             	mov    -0x8(%rbp),%eax
    187b:	01 d0                	add    %edx,%eax
    187d:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1881:	48 98                	cltq   
    1883:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1888:	0f b6 d0             	movzbl %al,%edx
    188b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    188f:	48 8d 35 e0 07 00 00 	lea    0x7e0(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1896:	48 89 c7             	mov    %rax,%rdi
    1899:	b8 00 00 00 00       	mov    $0x0,%eax
    189e:	e8 1d f8 ff ff       	callq  10c0 <fprintf@plt>
    18a3:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    18a7:	8b 45 f0             	mov    -0x10(%rbp),%eax
    18aa:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18ad:	7c bc                	jl     186b <create_pbm+0xa3>
    18af:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18b7:	8b 40 04             	mov    0x4(%rax),%eax
    18ba:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18bd:	7c a3                	jl     1862 <create_pbm+0x9a>
    18bf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18c3:	48 89 c6             	mov    %rax,%rsi
    18c6:	bf 0a 00 00 00       	mov    $0xa,%edi
    18cb:	e8 c0 f7 ff ff       	callq  1090 <fputc@plt>
    18d0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18d4:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18d7:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18da:	0f 8c 79 ff ff ff    	jl     1859 <create_pbm+0x91>
    18e0:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18e8:	8b 00                	mov    (%rax),%eax
    18ea:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18ed:	0f 8c 5d ff ff ff    	jl     1850 <create_pbm+0x88>
    18f3:	90                   	nop
    18f4:	90                   	nop
    18f5:	c9                   	leaveq 
    18f6:	c3                   	retq   

00000000000018f7 <board_compare>:
    18f7:	55                   	push   %rbp
    18f8:	48 89 e5             	mov    %rsp,%rbp
    18fb:	48 83 ec 10          	sub    $0x10,%rsp
    18ff:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1903:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1907:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    190b:	8b 10                	mov    (%rax),%edx
    190d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1911:	8b 00                	mov    (%rax),%eax
    1913:	39 c2                	cmp    %eax,%edx
    1915:	74 07                	je     191e <board_compare+0x27>
    1917:	b8 00 00 00 00       	mov    $0x0,%eax
    191c:	eb 56                	jmp    1974 <board_compare+0x7d>
    191e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1922:	8b 50 04             	mov    0x4(%rax),%edx
    1925:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1929:	8b 40 04             	mov    0x4(%rax),%eax
    192c:	39 c2                	cmp    %eax,%edx
    192e:	74 07                	je     1937 <board_compare+0x40>
    1930:	b8 00 00 00 00       	mov    $0x0,%eax
    1935:	eb 3d                	jmp    1974 <board_compare+0x7d>
    1937:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    193b:	8b 50 04             	mov    0x4(%rax),%edx
    193e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1942:	8b 00                	mov    (%rax),%eax
    1944:	0f af c2             	imul   %edx,%eax
    1947:	48 98                	cltq   
    1949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    194d:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1951:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1955:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1959:	48 89 c2             	mov    %rax,%rdx
    195c:	48 89 cf             	mov    %rcx,%rdi
    195f:	e8 3c f7 ff ff       	callq  10a0 <memcmp@plt>
    1964:	85 c0                	test   %eax,%eax
    1966:	74 07                	je     196f <board_compare+0x78>
    1968:	b8 00 00 00 00       	mov    $0x0,%eax
    196d:	eb 05                	jmp    1974 <board_compare+0x7d>
    196f:	b8 01 00 00 00       	mov    $0x1,%eax
    1974:	c9                   	leaveq 
    1975:	c3                   	retq   

0000000000001976 <create_board_copy>:
    1976:	55                   	push   %rbp
    1977:	48 89 e5             	mov    %rsp,%rbp
    197a:	48 83 ec 20          	sub    $0x20,%rsp
    197e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1982:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1986:	8b 10                	mov    (%rax),%edx
    1988:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    198c:	8b 40 04             	mov    0x4(%rax),%eax
    198f:	0f af c2             	imul   %edx,%eax
    1992:	48 98                	cltq   
    1994:	48 83 c0 08          	add    $0x8,%rax
    1998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    199c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19a0:	48 89 c7             	mov    %rax,%rdi
    19a3:	e8 38 f7 ff ff       	callq  10e0 <malloc@plt>
    19a8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    19ac:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19b0:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b8:	48 89 ce             	mov    %rcx,%rsi
    19bb:	48 89 c7             	mov    %rax,%rdi
    19be:	e8 0d f7 ff ff       	callq  10d0 <memcpy@plt>
    19c3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19c7:	c9                   	leaveq 
    19c8:	c3                   	retq   

00000000000019c9 <coords_on_board>:
    19c9:	55                   	push   %rbp
    19ca:	48 89 e5             	mov    %rsp,%rbp
    19cd:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19d1:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19d5:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19d9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19dd:	8b 00                	mov    (%rax),%eax
    19df:	85 c0                	test   %eax,%eax
    19e1:	78 19                	js     19fc <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 10                	mov    (%rax),%edx
    19e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ed:	8b 40 04             	mov    0x4(%rax),%eax
    19f0:	39 c2                	cmp    %eax,%edx
    19f2:	7d 08                	jge    19fc <coords_on_board+0x33>
    19f4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19f8:	8b 00                	mov    (%rax),%eax
    19fa:	eb 27                	jmp    1a23 <coords_on_board+0x5a>
    19fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1a00:	8b 00                	mov    (%rax),%eax
    1a02:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a06:	8b 4a 04             	mov    0x4(%rdx),%ecx
    1a09:	99                   	cltd   
    1a0a:	f7 f9                	idiv   %ecx
    1a0c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a10:	8b 40 04             	mov    0x4(%rax),%eax
    1a13:	01 c2                	add    %eax,%edx
    1a15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a19:	8b 48 04             	mov    0x4(%rax),%ecx
    1a1c:	89 d0                	mov    %edx,%eax
    1a1e:	99                   	cltd   
    1a1f:	f7 f9                	idiv   %ecx
    1a21:	89 d0                	mov    %edx,%eax
    1a23:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a27:	89 02                	mov    %eax,(%rdx)
    1a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a2d:	8b 00                	mov    (%rax),%eax
    1a2f:	85 c0                	test   %eax,%eax
    1a31:	78 18                	js     1a4b <coords_on_board+0x82>
    1a33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a37:	8b 10                	mov    (%rax),%edx
    1a39:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a3d:	8b 00                	mov    (%rax),%eax
    1a3f:	39 c2                	cmp    %eax,%edx
    1a41:	7d 08                	jge    1a4b <coords_on_board+0x82>
    1a43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a47:	8b 00                	mov    (%rax),%eax
    1a49:	eb 24                	jmp    1a6f <coords_on_board+0xa6>
    1a4b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a4f:	8b 00                	mov    (%rax),%eax
    1a51:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a55:	8b 0a                	mov    (%rdx),%ecx
    1a57:	99                   	cltd   
    1a58:	f7 f9                	idiv   %ecx
    1a5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a5e:	8b 00                	mov    (%rax),%eax
    1a60:	01 c2                	add    %eax,%edx
    1a62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a66:	8b 08                	mov    (%rax),%ecx
    1a68:	89 d0                	mov    %edx,%eax
    1a6a:	99                   	cltd   
    1a6b:	f7 f9                	idiv   %ecx
    1a6d:	89 d0                	mov    %edx,%eax
    1a6f:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a73:	89 02                	mov    %eax,(%rdx)
    1a75:	90                   	nop
    1a76:	5d                   	pop    %rbp
    1a77:	c3                   	retq   

0000000000001a78 <check_state>:
    1a78:	55                   	push   %rbp
    1a79:	48 89 e5             	mov    %rsp,%rbp
    1a7c:	48 83 ec 10          	sub    $0x10,%rsp
    1a80:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a84:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a87:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a8e:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a92:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a96:	48 89 ce             	mov    %rcx,%rsi
    1a99:	48 89 c7             	mov    %rax,%rdi
    1a9c:	e8 28 ff ff ff       	callq  19c9 <coords_on_board>
    1aa1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1aa5:	8b 50 04             	mov    0x4(%rax),%edx
    1aa8:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1aab:	0f af d0             	imul   %eax,%edx
    1aae:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1ab1:	01 d0                	add    %edx,%eax
    1ab3:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1ab7:	48 98                	cltq   
    1ab9:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1abe:	c9                   	leaveq 
    1abf:	c3                   	retq   

0000000000001ac0 <set_state>:
    1ac0:	55                   	push   %rbp
    1ac1:	48 89 e5             	mov    %rsp,%rbp
    1ac4:	48 83 ec 18          	sub    $0x18,%rsp
    1ac8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1acc:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1acf:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ad2:	89 c8                	mov    %ecx,%eax
    1ad4:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ad7:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1adb:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1adf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae3:	48 89 ce             	mov    %rcx,%rsi
    1ae6:	48 89 c7             	mov    %rax,%rdi
    1ae9:	e8 db fe ff ff       	callq  19c9 <coords_on_board>
    1aee:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1af2:	8b 50 04             	mov    0x4(%rax),%edx
    1af5:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1af8:	0f af d0             	imul   %eax,%edx
    1afb:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1afe:	01 d0                	add    %edx,%eax
    1b00:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1b04:	48 98                	cltq   
    1b06:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1b0a:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1b0e:	90                   	nop
    1b0f:	c9                   	leaveq 
    1b10:	c3                   	retq   

0000000000001b11 <get_num_neighbours>:
    1b11:	55                   	push   %rbp
    1b12:	48 89 e5             	mov    %rsp,%rbp
    1b15:	53                   	push   %rbx
    1b16:	48 83 ec 10          	sub    $0x10,%rsp
    1b1a:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b1e:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b21:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b24:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b27:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b2a:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b2d:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b30:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b34:	89 ce                	mov    %ecx,%esi
    1b36:	48 89 c7             	mov    %rax,%rdi
    1b39:	e8 3a ff ff ff       	callq  1a78 <check_state>
    1b3e:	0f b6 d8             	movzbl %al,%ebx
    1b41:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b44:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b47:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b4a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b4e:	89 ce                	mov    %ecx,%esi
    1b50:	48 89 c7             	mov    %rax,%rdi
    1b53:	e8 20 ff ff ff       	callq  1a78 <check_state>
    1b58:	0f b6 c0             	movzbl %al,%eax
    1b5b:	01 c3                	add    %eax,%ebx
    1b5d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b60:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b63:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b66:	8d 48 01             	lea    0x1(%rax),%ecx
    1b69:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b6d:	89 ce                	mov    %ecx,%esi
    1b6f:	48 89 c7             	mov    %rax,%rdi
    1b72:	e8 01 ff ff ff       	callq  1a78 <check_state>
    1b77:	0f b6 c0             	movzbl %al,%eax
    1b7a:	01 c3                	add    %eax,%ebx
    1b7c:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b7f:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b82:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b85:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b89:	89 ce                	mov    %ecx,%esi
    1b8b:	48 89 c7             	mov    %rax,%rdi
    1b8e:	e8 e5 fe ff ff       	callq  1a78 <check_state>
    1b93:	0f b6 c0             	movzbl %al,%eax
    1b96:	01 c3                	add    %eax,%ebx
    1b98:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b9b:	8d 48 01             	lea    0x1(%rax),%ecx
    1b9e:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1ba1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1ba5:	89 ce                	mov    %ecx,%esi
    1ba7:	48 89 c7             	mov    %rax,%rdi
    1baa:	e8 c9 fe ff ff       	callq  1a78 <check_state>
    1baf:	0f b6 c0             	movzbl %al,%eax
    1bb2:	01 c3                	add    %eax,%ebx
    1bb4:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bb7:	8d 50 01             	lea    0x1(%rax),%edx
    1bba:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bbd:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1bc0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bc4:	89 ce                	mov    %ecx,%esi
    1bc6:	48 89 c7             	mov    %rax,%rdi
    1bc9:	e8 aa fe ff ff       	callq  1a78 <check_state>
    1bce:	0f b6 c0             	movzbl %al,%eax
    1bd1:	01 c3                	add    %eax,%ebx
    1bd3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bd6:	8d 50 01             	lea    0x1(%rax),%edx
    1bd9:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bdc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1be0:	89 ce                	mov    %ecx,%esi
    1be2:	48 89 c7             	mov    %rax,%rdi
    1be5:	e8 8e fe ff ff       	callq  1a78 <check_state>
    1bea:	0f b6 c0             	movzbl %al,%eax
    1bed:	01 c3                	add    %eax,%ebx
    1bef:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bf2:	8d 50 01             	lea    0x1(%rax),%edx
    1bf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bf8:	8d 48 01             	lea    0x1(%rax),%ecx
    1bfb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bff:	89 ce                	mov    %ecx,%esi
    1c01:	48 89 c7             	mov    %rax,%rdi
    1c04:	e8 6f fe ff ff       	callq  1a78 <check_state>
    1c09:	0f b6 c0             	movzbl %al,%eax
    1c0c:	01 d8                	add    %ebx,%eax
    1c0e:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c12:	c9                   	leaveq 
    1c13:	c3                   	retq   

0000000000001c14 <get_new_state>:
    1c14:	55                   	push   %rbp
    1c15:	48 89 e5             	mov    %rsp,%rbp
    1c18:	48 83 ec 20          	sub    $0x20,%rsp
    1c1c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c20:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c23:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c26:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c29:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c2c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c30:	89 ce                	mov    %ecx,%esi
    1c32:	48 89 c7             	mov    %rax,%rdi
    1c35:	e8 d7 fe ff ff       	callq  1b11 <get_num_neighbours>
    1c3a:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c3d:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c40:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c47:	89 ce                	mov    %ecx,%esi
    1c49:	48 89 c7             	mov    %rax,%rdi
    1c4c:	e8 27 fe ff ff       	callq  1a78 <check_state>
    1c51:	84 c0                	test   %al,%al
    1c53:	74 1d                	je     1c72 <get_new_state+0x5e>
    1c55:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c59:	7e 0d                	jle    1c68 <get_new_state+0x54>
    1c5b:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c5f:	7f 07                	jg     1c68 <get_new_state+0x54>
    1c61:	b8 01 00 00 00       	mov    $0x1,%eax
    1c66:	eb 05                	jmp    1c6d <get_new_state+0x59>
    1c68:	b8 00 00 00 00       	mov    $0x0,%eax
    1c6d:	83 e0 01             	and    $0x1,%eax
    1c70:	eb 07                	jmp    1c79 <get_new_state+0x65>
    1c72:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c76:	0f 94 c0             	sete   %al
    1c79:	c9                   	leaveq 
    1c7a:	c3                   	retq   

0000000000001c7b <update_board>:
    1c7b:	55                   	push   %rbp
    1c7c:	48 89 e5             	mov    %rsp,%rbp
    1c7f:	48 83 ec 20          	sub    $0x20,%rsp
    1c83:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c87:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c8b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c92:	eb 46                	jmp    1cda <update_board+0x5f>
    1c94:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c9b:	eb 2d                	jmp    1cca <update_board+0x4f>
    1c9d:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca0:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ca7:	89 ce                	mov    %ecx,%esi
    1ca9:	48 89 c7             	mov    %rax,%rdi
    1cac:	e8 63 ff ff ff       	callq  1c14 <get_new_state>
    1cb1:	0f b6 c8             	movzbl %al,%ecx
    1cb4:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1cb7:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cbe:	48 89 c7             	mov    %rax,%rdi
    1cc1:	e8 fa fd ff ff       	callq  1ac0 <set_state>
    1cc6:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cce:	8b 40 04             	mov    0x4(%rax),%eax
    1cd1:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cd4:	7c c7                	jl     1c9d <update_board+0x22>
    1cd6:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cda:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cde:	8b 00                	mov    (%rax),%eax
    1ce0:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1ce3:	7c af                	jl     1c94 <update_board+0x19>
    1ce5:	90                   	nop
    1ce6:	90                   	nop
    1ce7:	c9                   	leaveq 
    1ce8:	c3                   	retq   

0000000000001ce9 <random_int>:
    1ce9:	55                   	push   %rbp
    1cea:	48 89 e5             	mov    %rsp,%rbp
    1ced:	48 83 ec 10          	sub    $0x10,%rsp
    1cf1:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1cf4:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1cf7:	e8 24 f4 ff ff       	callq  1120 <rand@plt>
    1cfc:	89 c1                	mov    %eax,%ecx
    1cfe:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1d01:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1d04:	8d 70 01             	lea    0x1(%rax),%esi
    1d07:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d0c:	99                   	cltd   
    1d0d:	f7 fe                	idiv   %esi
    1d0f:	8d 78 01             	lea    0x1(%rax),%edi
    1d12:	89 c8                	mov    %ecx,%eax
    1d14:	99                   	cltd   
    1d15:	f7 ff                	idiv   %edi
    1d17:	89 c2                	mov    %eax,%edx
    1d19:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d1c:	01 d0                	add    %edx,%eax
    1d1e:	c9                   	leaveq 
    1d1f:	c3                   	retq   

0000000000001d20 <init_board>:
    1d20:	55                   	push   %rbp
    1d21:	48 89 e5             	mov    %rsp,%rbp
    1d24:	53                   	push   %rbx
    1d25:	48 83 ec 28          	sub    $0x28,%rsp
    1d29:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d2c:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d2f:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d32:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d35:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d39:	48 98                	cltq   
    1d3b:	48 83 c0 08          	add    $0x8,%rax
    1d3f:	48 89 c6             	mov    %rax,%rsi
    1d42:	bf 01 00 00 00       	mov    $0x1,%edi
    1d47:	e8 64 f3 ff ff       	callq  10b0 <calloc@plt>
    1d4c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d50:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d54:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d57:	89 10                	mov    %edx,(%rax)
    1d59:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d5d:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d60:	89 50 04             	mov    %edx,0x4(%rax)
    1d63:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d67:	74 56                	je     1dbf <init_board+0x9f>
    1d69:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d70:	eb 40                	jmp    1db2 <init_board+0x92>
    1d72:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d76:	8b 00                	mov    (%rax),%eax
    1d78:	89 c6                	mov    %eax,%esi
    1d7a:	bf 00 00 00 00       	mov    $0x0,%edi
    1d7f:	e8 65 ff ff ff       	callq  1ce9 <random_int>
    1d84:	89 c3                	mov    %eax,%ebx
    1d86:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8a:	8b 40 04             	mov    0x4(%rax),%eax
    1d8d:	89 c6                	mov    %eax,%esi
    1d8f:	bf 00 00 00 00       	mov    $0x0,%edi
    1d94:	e8 50 ff ff ff       	callq  1ce9 <random_int>
    1d99:	89 c6                	mov    %eax,%esi
    1d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d9f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1da4:	89 da                	mov    %ebx,%edx
    1da6:	48 89 c7             	mov    %rax,%rdi
    1da9:	e8 12 fd ff ff       	callq  1ac0 <set_state>
    1dae:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1db2:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1db5:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1db8:	7c b8                	jl     1d72 <init_board+0x52>
    1dba:	e9 87 00 00 00       	jmpq   1e46 <init_board+0x126>
    1dbf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dc3:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dc8:	ba 00 00 00 00       	mov    $0x0,%edx
    1dcd:	be 02 00 00 00       	mov    $0x2,%esi
    1dd2:	48 89 c7             	mov    %rax,%rdi
    1dd5:	e8 e6 fc ff ff       	callq  1ac0 <set_state>
    1dda:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dde:	b9 01 00 00 00       	mov    $0x1,%ecx
    1de3:	ba 01 00 00 00       	mov    $0x1,%edx
    1de8:	be 00 00 00 00       	mov    $0x0,%esi
    1ded:	48 89 c7             	mov    %rax,%rdi
    1df0:	e8 cb fc ff ff       	callq  1ac0 <set_state>
    1df5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1df9:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dfe:	ba 01 00 00 00       	mov    $0x1,%edx
    1e03:	be 02 00 00 00       	mov    $0x2,%esi
    1e08:	48 89 c7             	mov    %rax,%rdi
    1e0b:	e8 b0 fc ff ff       	callq  1ac0 <set_state>
    1e10:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e14:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e19:	ba 02 00 00 00       	mov    $0x2,%edx
    1e1e:	be 01 00 00 00       	mov    $0x1,%esi
    1e23:	48 89 c7             	mov    %rax,%rdi
    1e26:	e8 95 fc ff ff       	callq  1ac0 <set_state>
    1e2b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e2f:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e34:	ba 02 00 00 00       	mov    $0x2,%edx
    1e39:	be 02 00 00 00       	mov    $0x2,%esi
    1e3e:	48 89 c7             	mov    %rax,%rdi
    1e41:	e8 7a fc ff ff       	callq  1ac0 <set_state>
    1e46:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e4a:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e4e:	c9                   	leaveq 
    1e4f:	c3                   	retq   

0000000000001e50 <__libc_csu_init>:
    1e50:	41 57                	push   %r15
    1e52:	4c 8d 3d 8f 1f 00 00 	lea    0x1f8f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e59:	41 56                	push   %r14
    1e5b:	49 89 d6             	mov    %rdx,%r14
    1e5e:	41 55                	push   %r13
    1e60:	49 89 f5             	mov    %rsi,%r13
    1e63:	41 54                	push   %r12
    1e65:	41 89 fc             	mov    %edi,%r12d
    1e68:	55                   	push   %rbp
    1e69:	48 8d 2d 80 1f 00 00 	lea    0x1f80(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e70:	53                   	push   %rbx
    1e71:	4c 29 fd             	sub    %r15,%rbp
    1e74:	48 83 ec 08          	sub    $0x8,%rsp
    1e78:	e8 83 f1 ff ff       	callq  1000 <_init>
    1e7d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e81:	74 1b                	je     1e9e <__libc_csu_init+0x4e>
    1e83:	31 db                	xor    %ebx,%ebx
    1e85:	0f 1f 00             	nopl   (%rax)
    1e88:	4c 89 f2             	mov    %r14,%rdx
    1e8b:	4c 89 ee             	mov    %r13,%rsi
    1e8e:	44 89 e7             	mov    %r12d,%edi
    1e91:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e95:	48 83 c3 01          	add    $0x1,%rbx
    1e99:	48 39 dd             	cmp    %rbx,%rbp
    1e9c:	75 ea                	jne    1e88 <__libc_csu_init+0x38>
    1e9e:	48 83 c4 08          	add    $0x8,%rsp
    1ea2:	5b                   	pop    %rbx
    1ea3:	5d                   	pop    %rbp
    1ea4:	41 5c                	pop    %r12
    1ea6:	41 5d                	pop    %r13
    1ea8:	41 5e                	pop    %r14
    1eaa:	41 5f                	pop    %r15
    1eac:	c3                   	retq   
    1ead:	0f 1f 00             	nopl   (%rax)

0000000000001eb0 <__libc_csu_fini>:
    1eb0:	c3                   	retq   

Disassembly of section .fini:

0000000000001eb4 <_fini>:
    1eb4:	48 83 ec 08          	sub    $0x8,%rsp
    1eb8:	48 83 c4 08          	add    $0x8,%rsp
    1ebc:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__GNU_EH_FRAME_HDR+0xd>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__GNU_EH_FRAME_HDR+0x18>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__GNU_EH_FRAME_HDR+0x1b>
    2036:	74 69                	je     20a1 <__GNU_EH_FRAME_HDR+0x25>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__GNU_EH_FRAME_HDR+0x24>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__GNU_EH_FRAME_HDR+0x41>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__GNU_EH_FRAME_HDR+0x11>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__GNU_EH_FRAME_HDR+0x50>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 01                	add    %al,(%rcx)
    20a9:	f2 ff                	repnz (bad) 
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 13                	add    %dl,(%rbx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 d3 f3 	incl   -0xc2d0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 69 f5 	jmpq   *-0xa970000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 d8                	add    %bl,%al
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 4c       	callq  4c0020d2 <_end+0x4bffe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	7b f8                	jnp    20d2 <__GNU_EH_FRAME_HDR+0x56>
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	fa                   	cli    
    20e1:	f8                   	clc    
    20e2:	ff                   	(bad)  
    20e3:	ff 4c 02 00          	decl   0x0(%rdx,%rax,1)
    20e7:	00 4d f9             	add    %cl,-0x7(%rbp)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 fc                	add    %bh,%ah
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 44 fa 	decl   -0x5bc0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 95 fa 	ljmp   *-0x56b0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 98 fb ff ff f0    	add    %bl,-0xf000005(%rax)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ff                	add    %bh,%bh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 6d fc             	add    %ch,-0x4(%rbp)
    211a:	ff                   	(bad)  
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 a4 fc ff ff 50 03 	add    %ah,0x350ffff(%rsp,%rdi,8)
    2126:	00 00                	add    %al,(%rax)
    2128:	d4                   	(bad)  
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 34 fe             	add    %dh,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__GNU_EH_FRAME_HDR+0xdb>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__GNU_EH_FRAME_HDR+0x10b>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 58 00             	lcall  *0x0(%rax)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 53 0c             	add    0xc(%rbx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__GNU_EH_FRAME_HDR+0x16a>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	95                   	xchg   %eax,%ebp
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 12                	callq  *(%rdx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	03 0d 01 0c 07 08    	add    0x8070c01(%rip),%ecx        # 8072e00 <_end+0x806ed50>
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 87 f1 ff ff c0    	add    %al,-0x3f00000f(%rdi)
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 27       	mov    $0x27000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 9d f3 ff ff 6f    	add    %bl,0x6ffffff3(%rbp)
    224d:	00 00                	add    %al,(%rax)
    224f:	00 00                	add    %al,(%rax)
    2251:	41 0e                	rex.B (bad) 
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	e8 f3 ff ff 74       	callq  75002264 <_end+0x74ffe1b4>
    2271:	01 00                	add    %eax,(%rax)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	38 f5                	cmp    %dh,%ch
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 47 f6             	add    %al,-0xa(%rdi)
    22b2:	ff                   	(bad)  
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__GNU_EH_FRAME_HDR+0x23a>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 a6 f6 ff ff 53    	add    %ah,0x53fffff6(%rsi)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	d9 f6                	fdecstp 
    22f2:	ff                   	(bad)  
    22f3:	ff af 00 00 00 00    	ljmp   *0x0(%rdi)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 68 f7             	add    %ch,-0x9(%rax)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	90                   	nop
    2331:	f7 ff                	idiv   %edi
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 c1                	add    %al,%cl
    2351:	f7 ff                	idiv   %edi
    2353:	ff 03                	incl   (%rbx)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	a0 f8 ff ff 67 00 00 	movabs 0x67fffff8,%al
    237b:	00 00 
    237d:	41 0e                	rex.B (bad) 
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	e7 f8                	out    %eax,$0xf8
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 35 f9 ff ff 37    	add    %dh,0x37fffff9(%rip)        # 380023b2 <_end+0x37ffe302>
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__GNU_EH_FRAME_HDR+0x357>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 4c       	pushq  $0x4c000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 58 fa 	add    %cl,-0x5a80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 70 fa             	add    %dh,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 b4 1e 00 00 00 00 	add    %dh,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...

gol_main:     file format elf64-x86-64


Disassembly of section .interp:

00000000000002a8 <.interp>:
 2a8:	2f                   	(bad)  
 2a9:	6c                   	insb   (%dx),%es:(%rdi)
 2aa:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 2b1:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 2b6:	78 2d                	js     2e5 <_init-0xd1b>
 2b8:	78 38                	js     2f2 <_init-0xd0e>
 2ba:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 2c0:	6f                   	outsl  %ds:(%rsi),(%dx)
 2c1:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.gnu.build-id:

00000000000002c4 <.note.gnu.build-id>:
 2c4:	04 00                	add    $0x0,%al
 2c6:	00 00                	add    %al,(%rax)
 2c8:	14 00                	adc    $0x0,%al
 2ca:	00 00                	add    %al,(%rax)
 2cc:	03 00                	add    (%rax),%eax
 2ce:	00 00                	add    %al,(%rax)
 2d0:	47                   	rex.RXB
 2d1:	4e 55                	rex.WRX push %rbp
 2d3:	00 f3                	add    %dh,%bl
 2d5:	72 e5                	jb     2bc <_init-0xd44>
 2d7:	82                   	(bad)  
 2d8:	be 80 5a 68 b0       	mov    $0xb0685a80,%esi
 2dd:	b9 1a bd 8c 09       	mov    $0x98cbd1a,%ecx
 2e2:	82                   	(bad)  
 2e3:	66 70 08             	data16 jo 2ee <_init-0xd12>
 2e6:	22                   	.byte 0x22
 2e7:	85                   	.byte 0x85

Disassembly of section .note.ABI-tag:

00000000000002e8 <.note.ABI-tag>:
 2e8:	04 00                	add    $0x0,%al
 2ea:	00 00                	add    %al,(%rax)
 2ec:	10 00                	adc    %al,(%rax)
 2ee:	00 00                	add    %al,(%rax)
 2f0:	01 00                	add    %eax,(%rax)
 2f2:	00 00                	add    %al,(%rax)
 2f4:	47                   	rex.RXB
 2f5:	4e 55                	rex.WRX push %rbp
 2f7:	00 00                	add    %al,(%rax)
 2f9:	00 00                	add    %al,(%rax)
 2fb:	00 03                	add    %al,(%rbx)
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 02                	add    %al,(%rdx)
 301:	00 00                	add    %al,(%rax)
 303:	00 00                	add    %al,(%rax)
 305:	00 00                	add    %al,(%rax)
	...

Disassembly of section .gnu.hash:

0000000000000308 <.gnu.hash>:
 308:	02 00                	add    (%rax),%al
 30a:	00 00                	add    %al,(%rax)
 30c:	15 00 00 00 01       	adc    $0x1000000,%eax
 311:	00 00                	add    %al,(%rax)
 313:	00 06                	add    %al,(%rsi)
 315:	00 00                	add    %al,(%rax)
 317:	00 00                	add    %al,(%rax)
 319:	00 81 00 00 00 00    	add    %al,0x0(%rcx)
 31f:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 325 <_init-0xcdb>
 325:	00 00                	add    %al,(%rax)
 327:	00 d1                	add    %dl,%cl
 329:	65 ce                	gs (bad) 
 32b:	6d                   	insl   (%dx),%es:(%rdi)

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	91                   	xchg   %eax,%ecx
 349:	00 00                	add    %al,(%rax)
 34b:	00 12                	add    %dl,(%rdx)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 c2                	add    %al,%dl
 361:	00 00                	add    %al,(%rax)
 363:	00 20                	add    %ah,(%rax)
	...
 375:	00 00                	add    %al,(%rax)
 377:	00 01                	add    %al,(%rcx)
 379:	00 00                	add    %al,(%rax)
 37b:	00 12                	add    %dl,(%rdx)
	...
 38d:	00 00                	add    %al,(%rax)
 38f:	00 51 00             	add    %dl,0x0(%rcx)
 392:	00 00                	add    %al,(%rax)
 394:	12 00                	adc    (%rax),%al
	...
 3a6:	00 00                	add    %al,(%rax)
 3a8:	30 00                	xor    %al,(%rax)
 3aa:	00 00                	add    %al,(%rax)
 3ac:	12 00                	adc    (%rax),%al
	...
 3be:	00 00                	add    %al,(%rax)
 3c0:	15 00 00 00 12       	adc    $0x12000000,%eax
	...
 3d5:	00 00                	add    %al,(%rax)
 3d7:	00 88 00 00 00 12    	add    %cl,0x12000000(%rax)
	...
 3ed:	00 00                	add    %al,(%rax)
 3ef:	00 23                	add    %ah,(%rbx)
 3f1:	00 00                	add    %al,(%rax)
 3f3:	00 12                	add    %dl,(%rdx)
	...
 405:	00 00                	add    %al,(%rax)
 407:	00 76 00             	add    %dh,0x0(%rsi)
 40a:	00 00                	add    %al,(%rax)
 40c:	12 00                	adc    (%rax),%al
	...
 41e:	00 00                	add    %al,(%rax)
 420:	1c 00                	sbb    $0x0,%al
 422:	00 00                	add    %al,(%rax)
 424:	12 00                	adc    (%rax),%al
	...
 436:	00 00                	add    %al,(%rax)
 438:	0e                   	(bad)  
 439:	00 00                	add    %al,(%rax)
 43b:	00 12                	add    %dl,(%rdx)
	...
 44d:	00 00                	add    %al,(%rax)
 44f:	00 5f 00             	add    %bl,0x0(%rdi)
 452:	00 00                	add    %al,(%rax)
 454:	12 00                	adc    (%rax),%al
	...
 466:	00 00                	add    %al,(%rax)
 468:	de 00                	fiadds (%rax)
 46a:	00 00                	add    %al,(%rax)
 46c:	20 00                	and    %al,(%rax)
	...
 47e:	00 00                	add    %al,(%rax)
 480:	29 00                	sub    %eax,(%rax)
 482:	00 00                	add    %al,(%rax)
 484:	12 00                	adc    (%rax),%al
	...
 496:	00 00                	add    %al,(%rax)
 498:	3c 00                	cmp    $0x0,%al
 49a:	00 00                	add    %al,(%rax)
 49c:	12 00                	adc    (%rax),%al
	...
 4ae:	00 00                	add    %al,(%rax)
 4b0:	08 00                	or     %al,(%rax)
 4b2:	00 00                	add    %al,(%rax)
 4b4:	12 00                	adc    (%rax),%al
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	43 00 00             	rex.XB add %al,(%r8)
 4cb:	00 12                	add    %dl,(%rdx)
	...
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 4a 00             	add    %cl,0x0(%rdx)
 4e2:	00 00                	add    %al,(%rax)
 4e4:	12 00                	adc    (%rax),%al
	...
 4f6:	00 00                	add    %al,(%rax)
 4f8:	ed                   	in     (%dx),%eax
 4f9:	00 00                	add    %al,(%rax)
 4fb:	00 20                	add    %ah,(%rax)
	...
 50d:	00 00                	add    %al,(%rax)
 50f:	00 37                	add    %dh,(%rdi)
 511:	00 00                	add    %al,(%rax)
 513:	00 12                	add    %dl,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 67 00             	add    %ah,0x0(%rdi)
 52a:	00 00                	add    %al,(%rax)
 52c:	22 00                	and    (%rax),%al
	...

Disassembly of section .dynstr:

0000000000000540 <.dynstr>:
 540:	00 73 74             	add    %dh,0x74(%rbx)
 543:	72 63                	jb     5a8 <_init-0xa58>
 545:	70 79                	jo     5c0 <_init-0xa40>
 547:	00 66 6f             	add    %ah,0x6f(%rsi)
 54a:	70 65                	jo     5b1 <_init-0xa4f>
 54c:	6e                   	outsb  %ds:(%rsi),(%dx)
 54d:	00 63 61             	add    %ah,0x61(%rbx)
 550:	6c                   	insb   (%dx),%es:(%rdi)
 551:	6c                   	insb   (%dx),%es:(%rdi)
 552:	6f                   	outsl  %ds:(%rsi),(%dx)
 553:	63 00                	movsxd (%rax),%eax
 555:	73 74                	jae    5cb <_init-0xa35>
 557:	72 6c                	jb     5c5 <_init-0xa3b>
 559:	65 6e                	outsb  %gs:(%rsi),(%dx)
 55b:	00 6d 65             	add    %ch,0x65(%rbp)
 55e:	6d                   	insl   (%dx),%es:(%rdi)
 55f:	63 6d 70             	movsxd 0x70(%rbp),%ebp
 562:	00 66 70             	add    %ah,0x70(%rsi)
 565:	75 74                	jne    5db <_init-0xa25>
 567:	63 00                	movsxd (%rax),%eax
 569:	6d                   	insl   (%dx),%es:(%rdi)
 56a:	65 6d                	gs insl (%dx),%es:(%rdi)
 56c:	63 70 79             	movsxd 0x79(%rax),%esi
 56f:	00 66 63             	add    %ah,0x63(%rsi)
 572:	6c                   	insb   (%dx),%es:(%rdi)
 573:	6f                   	outsl  %ds:(%rsi),(%dx)
 574:	73 65                	jae    5db <_init-0xa25>
 576:	00 72 61             	add    %dh,0x61(%rdx)
 579:	6e                   	outsb  %ds:(%rsi),(%dx)
 57a:	64 00 6d 61          	add    %ch,%fs:0x61(%rbp)
 57e:	6c                   	insb   (%dx),%es:(%rdi)
 57f:	6c                   	insb   (%dx),%es:(%rdi)
 580:	6f                   	outsl  %ds:(%rsi),(%dx)
 581:	63 00                	movsxd (%rax),%eax
 583:	73 74                	jae    5f9 <_init-0xa07>
 585:	72 63                	jb     5ea <_init-0xa16>
 587:	61                   	(bad)  
 588:	74 00                	je     58a <_init-0xa76>
 58a:	66 77 72             	data16 ja 5ff <_init-0xa01>
 58d:	69 74 65 00 63 6c 6f 	imul   $0x636f6c63,0x0(%rbp,%riz,2),%esi
 594:	63 
 595:	6b 5f 67 65          	imul   $0x65,0x67(%rdi),%ebx
 599:	74 74                	je     60f <_init-0x9f1>
 59b:	69 6d 65 00 66 70 72 	imul   $0x72706600,0x65(%rbp),%ebp
 5a2:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 5a9:	63 78 61             	movsxd 0x61(%rax),%edi
 5ac:	5f                   	pop    %rdi
 5ad:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 5b3:	7a 65                	jp     61a <_init-0x9e6>
 5b5:	00 5f 5f             	add    %bl,0x5f(%rdi)
 5b8:	6c                   	insb   (%dx),%es:(%rdi)
 5b9:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 5c0:	72 74                	jb     636 <_init-0x9ca>
 5c2:	5f                   	pop    %rdi
 5c3:	6d                   	insl   (%dx),%es:(%rdi)
 5c4:	61                   	(bad)  
 5c5:	69 6e 00 73 6e 70 72 	imul   $0x72706e73,0x0(%rsi),%ebp
 5cc:	69 6e 74 66 00 66 72 	imul   $0x72660066,0x74(%rsi),%ebp
 5d3:	65 65 00 6c 69 62    	gs add %ch,%gs:0x62(%rcx,%rbp,2)
 5d9:	63 2e                	movsxd (%rsi),%ebp
 5db:	73 6f                	jae    64c <_init-0x9b4>
 5dd:	2e 36 00 47 4c       	cs add %al,%ss:0x4c(%rdi)
 5e2:	49                   	rex.WB
 5e3:	42                   	rex.X
 5e4:	43 5f                	rex.XB pop %r15
 5e6:	32 2e                	xor    (%rsi),%ch
 5e8:	31 34 00             	xor    %esi,(%rax,%rax,1)
 5eb:	47                   	rex.RXB
 5ec:	4c                   	rex.WR
 5ed:	49                   	rex.WB
 5ee:	42                   	rex.X
 5ef:	43 5f                	rex.XB pop %r15
 5f1:	32 2e                	xor    (%rsi),%ch
 5f3:	31 37                	xor    %esi,(%rdi)
 5f5:	00 47 4c             	add    %al,0x4c(%rdi)
 5f8:	49                   	rex.WB
 5f9:	42                   	rex.X
 5fa:	43 5f                	rex.XB pop %r15
 5fc:	32 2e                	xor    (%rsi),%ch
 5fe:	32 2e                	xor    (%rsi),%ch
 600:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 605:	4d 5f                	rex.WRB pop %r15
 607:	64 65 72 65          	fs gs jb 670 <_init-0x990>
 60b:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 612:	4d 
 613:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 615:	6f                   	outsl  %ds:(%rsi),(%dx)
 616:	6e                   	outsb  %ds:(%rsi),(%dx)
 617:	65 54                	gs push %rsp
 619:	61                   	(bad)  
 61a:	62                   	(bad)  
 61b:	6c                   	insb   (%dx),%es:(%rdi)
 61c:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 620:	67 6d                	insl   (%dx),%es:(%edi)
 622:	6f                   	outsl  %ds:(%rsi),(%dx)
 623:	6e                   	outsb  %ds:(%rsi),(%dx)
 624:	5f                   	pop    %rdi
 625:	73 74                	jae    69b <_init-0x965>
 627:	61                   	(bad)  
 628:	72 74                	jb     69e <_init-0x962>
 62a:	5f                   	pop    %rdi
 62b:	5f                   	pop    %rdi
 62c:	00 5f 49             	add    %bl,0x49(%rdi)
 62f:	54                   	push   %rsp
 630:	4d 5f                	rex.WRB pop %r15
 632:	72 65                	jb     699 <_init-0x967>
 634:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 63b:	4d 
 63c:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 63e:	6f                   	outsl  %ds:(%rsi),(%dx)
 63f:	6e                   	outsb  %ds:(%rsi),(%dx)
 640:	65 54                	gs push %rsp
 642:	61                   	(bad)  
 643:	62                   	.byte 0x62
 644:	6c                   	insb   (%dx),%es:(%rdi)
 645:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000648 <.gnu.version>:
 648:	00 00                	add    %al,(%rax)
 64a:	02 00                	add    (%rax),%al
 64c:	00 00                	add    %al,(%rax)
 64e:	02 00                	add    (%rax),%al
 650:	03 00                	add    (%rax),%eax
 652:	02 00                	add    (%rax),%al
 654:	02 00                	add    (%rax),%al
 656:	02 00                	add    (%rax),%al
 658:	02 00                	add    (%rax),%al
 65a:	02 00                	add    (%rax),%al
 65c:	02 00                	add    (%rax),%al
 65e:	02 00                	add    (%rax),%al
 660:	02 00                	add    (%rax),%al
 662:	00 00                	add    %al,(%rax)
 664:	04 00                	add    $0x0,%al
 666:	02 00                	add    (%rax),%al
 668:	02 00                	add    (%rax),%al
 66a:	02 00                	add    (%rax),%al
 66c:	02 00                	add    (%rax),%al
 66e:	00 00                	add    %al,(%rax)
 670:	02 00                	add    (%rax),%al
 672:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000678 <.gnu.version_r>:
 678:	01 00                	add    %eax,(%rax)
 67a:	03 00                	add    (%rax),%eax
 67c:	96                   	xchg   %eax,%esi
 67d:	00 00                	add    %al,(%rax)
 67f:	00 10                	add    %dl,(%rax)
 681:	00 00                	add    %al,(%rax)
 683:	00 00                	add    %al,(%rax)
 685:	00 00                	add    %al,(%rax)
 687:	00 94 91 96 06 00 00 	add    %dl,0x696(%rcx,%rdx,4)
 68e:	04 00                	add    $0x0,%al
 690:	a0 00 00 00 10 00 00 	movabs 0x9700000010000000,%al
 697:	00 97 
 699:	91                   	xchg   %eax,%ecx
 69a:	96                   	xchg   %eax,%esi
 69b:	06                   	(bad)  
 69c:	00 00                	add    %al,(%rax)
 69e:	03 00                	add    (%rax),%eax
 6a0:	ab                   	stos   %eax,%es:(%rdi)
 6a1:	00 00                	add    %al,(%rax)
 6a3:	00 10                	add    %dl,(%rax)
 6a5:	00 00                	add    %al,(%rax)
 6a7:	00 75 1a             	add    %dh,0x1a(%rbp)
 6aa:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 6b0:	b6 00                	mov    $0x0,%dh
 6b2:	00 00                	add    %al,(%rax)
 6b4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

00000000000006b8 <.rela.dyn>:
 6b8:	e8 3d 00 00 00       	callq  6fa <_init-0x906>
 6bd:	00 00                	add    %al,(%rax)
 6bf:	00 08                	add    %cl,(%rax)
 6c1:	00 00                	add    %al,(%rax)
 6c3:	00 00                	add    %al,(%rax)
 6c5:	00 00                	add    %al,(%rax)
 6c7:	00 20                	add    %ah,(%rax)
 6c9:	12 00                	adc    (%rax),%al
 6cb:	00 00                	add    %al,(%rax)
 6cd:	00 00                	add    %al,(%rax)
 6cf:	00 f0                	add    %dh,%al
 6d1:	3d 00 00 00 00       	cmp    $0x0,%eax
 6d6:	00 00                	add    %al,(%rax)
 6d8:	08 00                	or     %al,(%rax)
 6da:	00 00                	add    %al,(%rax)
 6dc:	00 00                	add    %al,(%rax)
 6de:	00 00                	add    %al,(%rax)
 6e0:	e0 11                	loopne 6f3 <_init-0x90d>
 6e2:	00 00                	add    %al,(%rax)
 6e4:	00 00                	add    %al,(%rax)
 6e6:	00 00                	add    %al,(%rax)
 6e8:	a0 40 00 00 00 00 00 	movabs 0x800000000000040,%al
 6ef:	00 08 
 6f1:	00 00                	add    %al,(%rax)
 6f3:	00 00                	add    %al,(%rax)
 6f5:	00 00                	add    %al,(%rax)
 6f7:	00 a0 40 00 00 00    	add    %ah,0x40(%rax)
 6fd:	00 00                	add    %al,(%rax)
 6ff:	00 d8                	add    %bl,%al
 701:	3f                   	(bad)  
 702:	00 00                	add    %al,(%rax)
 704:	00 00                	add    %al,(%rax)
 706:	00 00                	add    %al,(%rax)
 708:	06                   	(bad)  
 709:	00 00                	add    %al,(%rax)
 70b:	00 02                	add    %al,(%rdx)
	...
 715:	00 00                	add    %al,(%rax)
 717:	00 e0                	add    %ah,%al
 719:	3f                   	(bad)  
 71a:	00 00                	add    %al,(%rax)
 71c:	00 00                	add    %al,(%rax)
 71e:	00 00                	add    %al,(%rax)
 720:	06                   	(bad)  
 721:	00 00                	add    %al,(%rax)
 723:	00 09                	add    %cl,(%rcx)
	...
 72d:	00 00                	add    %al,(%rax)
 72f:	00 e8                	add    %ch,%al
 731:	3f                   	(bad)  
 732:	00 00                	add    %al,(%rax)
 734:	00 00                	add    %al,(%rax)
 736:	00 00                	add    %al,(%rax)
 738:	06                   	(bad)  
 739:	00 00                	add    %al,(%rax)
 73b:	00 0d 00 00 00 00    	add    %cl,0x0(%rip)        # 741 <_init-0x8bf>
 741:	00 00                	add    %al,(%rax)
 743:	00 00                	add    %al,(%rax)
 745:	00 00                	add    %al,(%rax)
 747:	00 f0                	add    %dh,%al
 749:	3f                   	(bad)  
 74a:	00 00                	add    %al,(%rax)
 74c:	00 00                	add    %al,(%rax)
 74e:	00 00                	add    %al,(%rax)
 750:	06                   	(bad)  
 751:	00 00                	add    %al,(%rax)
 753:	00 13                	add    %dl,(%rbx)
	...
 75d:	00 00                	add    %al,(%rax)
 75f:	00 f8                	add    %bh,%al
 761:	3f                   	(bad)  
 762:	00 00                	add    %al,(%rax)
 764:	00 00                	add    %al,(%rax)
 766:	00 00                	add    %al,(%rax)
 768:	06                   	(bad)  
 769:	00 00                	add    %al,(%rax)
 76b:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 771 <_init-0x88f>
 771:	00 00                	add    %al,(%rax)
 773:	00 00                	add    %al,(%rax)
 775:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.plt:

0000000000000778 <.rela.plt>:
 778:	18 40 00             	sbb    %al,0x0(%rax)
 77b:	00 00                	add    %al,(%rax)
 77d:	00 00                	add    %al,(%rax)
 77f:	00 07                	add    %al,(%rdi)
 781:	00 00                	add    %al,(%rax)
 783:	00 01                	add    %al,(%rcx)
	...
 78d:	00 00                	add    %al,(%rax)
 78f:	00 20                	add    %ah,(%rax)
 791:	40 00 00             	add    %al,(%rax)
 794:	00 00                	add    %al,(%rax)
 796:	00 00                	add    %al,(%rax)
 798:	07                   	(bad)  
 799:	00 00                	add    %al,(%rax)
 79b:	00 03                	add    %al,(%rbx)
	...
 7a5:	00 00                	add    %al,(%rax)
 7a7:	00 28                	add    %ch,(%rax)
 7a9:	40 00 00             	add    %al,(%rax)
 7ac:	00 00                	add    %al,(%rax)
 7ae:	00 00                	add    %al,(%rax)
 7b0:	07                   	(bad)  
 7b1:	00 00                	add    %al,(%rax)
 7b3:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 7be:	00 00                	add    %al,(%rax)
 7c0:	30 40 00             	xor    %al,0x0(%rax)
 7c3:	00 00                	add    %al,(%rax)
 7c5:	00 00                	add    %al,(%rax)
 7c7:	00 07                	add    %al,(%rdi)
 7c9:	00 00                	add    %al,(%rax)
 7cb:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 7d1 <_init-0x82f>
 7d1:	00 00                	add    %al,(%rax)
 7d3:	00 00                	add    %al,(%rax)
 7d5:	00 00                	add    %al,(%rax)
 7d7:	00 38                	add    %bh,(%rax)
 7d9:	40 00 00             	add    %al,(%rax)
 7dc:	00 00                	add    %al,(%rax)
 7de:	00 00                	add    %al,(%rax)
 7e0:	07                   	(bad)  
 7e1:	00 00                	add    %al,(%rax)
 7e3:	00 06                	add    %al,(%rsi)
	...
 7ed:	00 00                	add    %al,(%rax)
 7ef:	00 40 40             	add    %al,0x40(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	00 00                	add    %al,(%rax)
 7f6:	00 00                	add    %al,(%rax)
 7f8:	07                   	(bad)  
 7f9:	00 00                	add    %al,(%rax)
 7fb:	00 07                	add    %al,(%rdi)
	...
 805:	00 00                	add    %al,(%rax)
 807:	00 48 40             	add    %cl,0x40(%rax)
 80a:	00 00                	add    %al,(%rax)
 80c:	00 00                	add    %al,(%rax)
 80e:	00 00                	add    %al,(%rax)
 810:	07                   	(bad)  
 811:	00 00                	add    %al,(%rax)
 813:	00 08                	add    %cl,(%rax)
	...
 81d:	00 00                	add    %al,(%rax)
 81f:	00 50 40             	add    %dl,0x40(%rax)
 822:	00 00                	add    %al,(%rax)
 824:	00 00                	add    %al,(%rax)
 826:	00 00                	add    %al,(%rax)
 828:	07                   	(bad)  
 829:	00 00                	add    %al,(%rax)
 82b:	00 0a                	add    %cl,(%rdx)
	...
 835:	00 00                	add    %al,(%rax)
 837:	00 58 40             	add    %bl,0x40(%rax)
 83a:	00 00                	add    %al,(%rax)
 83c:	00 00                	add    %al,(%rax)
 83e:	00 00                	add    %al,(%rax)
 840:	07                   	(bad)  
 841:	00 00                	add    %al,(%rax)
 843:	00 0b                	add    %cl,(%rbx)
	...
 84d:	00 00                	add    %al,(%rax)
 84f:	00 60 40             	add    %ah,0x40(%rax)
 852:	00 00                	add    %al,(%rax)
 854:	00 00                	add    %al,(%rax)
 856:	00 00                	add    %al,(%rax)
 858:	07                   	(bad)  
 859:	00 00                	add    %al,(%rax)
 85b:	00 0c 00             	add    %cl,(%rax,%rax,1)
	...
 866:	00 00                	add    %al,(%rax)
 868:	68 40 00 00 00       	pushq  $0x40
 86d:	00 00                	add    %al,(%rax)
 86f:	00 07                	add    %al,(%rdi)
 871:	00 00                	add    %al,(%rax)
 873:	00 0e                	add    %cl,(%rsi)
	...
 87d:	00 00                	add    %al,(%rax)
 87f:	00 70 40             	add    %dh,0x40(%rax)
 882:	00 00                	add    %al,(%rax)
 884:	00 00                	add    %al,(%rax)
 886:	00 00                	add    %al,(%rax)
 888:	07                   	(bad)  
 889:	00 00                	add    %al,(%rax)
 88b:	00 0f                	add    %cl,(%rdi)
	...
 895:	00 00                	add    %al,(%rax)
 897:	00 78 40             	add    %bh,0x40(%rax)
 89a:	00 00                	add    %al,(%rax)
 89c:	00 00                	add    %al,(%rax)
 89e:	00 00                	add    %al,(%rax)
 8a0:	07                   	(bad)  
 8a1:	00 00                	add    %al,(%rax)
 8a3:	00 10                	add    %dl,(%rax)
	...
 8ad:	00 00                	add    %al,(%rax)
 8af:	00 80 40 00 00 00    	add    %al,0x40(%rax)
 8b5:	00 00                	add    %al,(%rax)
 8b7:	00 07                	add    %al,(%rdi)
 8b9:	00 00                	add    %al,(%rax)
 8bb:	00 11                	add    %dl,(%rcx)
	...
 8c5:	00 00                	add    %al,(%rax)
 8c7:	00 88 40 00 00 00    	add    %cl,0x40(%rax)
 8cd:	00 00                	add    %al,(%rax)
 8cf:	00 07                	add    %al,(%rdi)
 8d1:	00 00                	add    %al,(%rax)
 8d3:	00 12                	add    %dl,(%rdx)
	...
 8dd:	00 00                	add    %al,(%rax)
 8df:	00 90 40 00 00 00    	add    %dl,0x40(%rax)
 8e5:	00 00                	add    %al,(%rax)
 8e7:	00 07                	add    %al,(%rdi)
 8e9:	00 00                	add    %al,(%rax)
 8eb:	00 14 00             	add    %dl,(%rax,%rax,1)
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 e2 2f 00 00    	pushq  0x2fe2(%rip)        # 4008 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 e4 2f 00 00    	jmpq   *0x2fe4(%rip)        # 4010 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <free@plt>:
    1030:	ff 25 e2 2f 00 00    	jmpq   *0x2fe2(%rip)        # 4018 <free@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <strcpy@plt>:
    1040:	ff 25 da 2f 00 00    	jmpq   *0x2fda(%rip)        # 4020 <strcpy@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <clock_gettime@plt>:
    1050:	ff 25 d2 2f 00 00    	jmpq   *0x2fd2(%rip)        # 4028 <clock_gettime@GLIBC_2.17>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <fclose@plt>:
    1060:	ff 25 ca 2f 00 00    	jmpq   *0x2fca(%rip)        # 4030 <fclose@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

0000000000001070 <strlen@plt>:
    1070:	ff 25 c2 2f 00 00    	jmpq   *0x2fc2(%rip)        # 4038 <strlen@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	pushq  $0x4
    107b:	e9 a0 ff ff ff       	jmpq   1020 <.plt>

0000000000001080 <snprintf@plt>:
    1080:	ff 25 ba 2f 00 00    	jmpq   *0x2fba(%rip)        # 4040 <snprintf@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	pushq  $0x5
    108b:	e9 90 ff ff ff       	jmpq   1020 <.plt>

0000000000001090 <fputc@plt>:
    1090:	ff 25 b2 2f 00 00    	jmpq   *0x2fb2(%rip)        # 4048 <fputc@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	pushq  $0x6
    109b:	e9 80 ff ff ff       	jmpq   1020 <.plt>

00000000000010a0 <memcmp@plt>:
    10a0:	ff 25 aa 2f 00 00    	jmpq   *0x2faa(%rip)        # 4050 <memcmp@GLIBC_2.2.5>
    10a6:	68 07 00 00 00       	pushq  $0x7
    10ab:	e9 70 ff ff ff       	jmpq   1020 <.plt>

00000000000010b0 <calloc@plt>:
    10b0:	ff 25 a2 2f 00 00    	jmpq   *0x2fa2(%rip)        # 4058 <calloc@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	pushq  $0x8
    10bb:	e9 60 ff ff ff       	jmpq   1020 <.plt>

00000000000010c0 <fprintf@plt>:
    10c0:	ff 25 9a 2f 00 00    	jmpq   *0x2f9a(%rip)        # 4060 <fprintf@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	pushq  $0x9
    10cb:	e9 50 ff ff ff       	jmpq   1020 <.plt>

00000000000010d0 <memcpy@plt>:
    10d0:	ff 25 92 2f 00 00    	jmpq   *0x2f92(%rip)        # 4068 <memcpy@GLIBC_2.14>
    10d6:	68 0a 00 00 00       	pushq  $0xa
    10db:	e9 40 ff ff ff       	jmpq   1020 <.plt>

00000000000010e0 <malloc@plt>:
    10e0:	ff 25 8a 2f 00 00    	jmpq   *0x2f8a(%rip)        # 4070 <malloc@GLIBC_2.2.5>
    10e6:	68 0b 00 00 00       	pushq  $0xb
    10eb:	e9 30 ff ff ff       	jmpq   1020 <.plt>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 4078 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	pushq  $0xc
    10fb:	e9 20 ff ff ff       	jmpq   1020 <.plt>

0000000000001100 <strcat@plt>:
    1100:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 4080 <strcat@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	pushq  $0xd
    110b:	e9 10 ff ff ff       	jmpq   1020 <.plt>

0000000000001110 <fwrite@plt>:
    1110:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 4088 <fwrite@GLIBC_2.2.5>
    1116:	68 0e 00 00 00       	pushq  $0xe
    111b:	e9 00 ff ff ff       	jmpq   1020 <.plt>

0000000000001120 <rand@plt>:
    1120:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 4090 <rand@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	pushq  $0xf
    112b:	e9 f0 fe ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001130 <__cxa_finalize@plt>:
    1130:	ff 25 c2 2e 00 00    	jmpq   *0x2ec2(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1136:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001140 <_start>:
    1140:	31 ed                	xor    %ebp,%ebp
    1142:	49 89 d1             	mov    %rdx,%r9
    1145:	5e                   	pop    %rsi
    1146:	48 89 e2             	mov    %rsp,%rdx
    1149:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    114d:	50                   	push   %rax
    114e:	54                   	push   %rsp
    114f:	4c 8d 05 4a 0d 00 00 	lea    0xd4a(%rip),%r8        # 1ea0 <__libc_csu_fini>
    1156:	48 8d 0d e3 0c 00 00 	lea    0xce3(%rip),%rcx        # 1e40 <__libc_csu_init>
    115d:	48 8d 3d df 04 00 00 	lea    0x4df(%rip),%rdi        # 1643 <main>
    1164:	ff 15 76 2e 00 00    	callq  *0x2e76(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    116a:	f4                   	hlt    
    116b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001170 <deregister_tm_clones>:
    1170:	48 8d 3d 31 2f 00 00 	lea    0x2f31(%rip),%rdi        # 40a8 <__TMC_END__>
    1177:	48 8d 05 2a 2f 00 00 	lea    0x2f2a(%rip),%rax        # 40a8 <__TMC_END__>
    117e:	48 39 f8             	cmp    %rdi,%rax
    1181:	74 15                	je     1198 <deregister_tm_clones+0x28>
    1183:	48 8b 05 4e 2e 00 00 	mov    0x2e4e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    118a:	48 85 c0             	test   %rax,%rax
    118d:	74 09                	je     1198 <deregister_tm_clones+0x28>
    118f:	ff e0                	jmpq   *%rax
    1191:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1198:	c3                   	retq   
    1199:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011a0 <register_tm_clones>:
    11a0:	48 8d 3d 01 2f 00 00 	lea    0x2f01(%rip),%rdi        # 40a8 <__TMC_END__>
    11a7:	48 8d 35 fa 2e 00 00 	lea    0x2efa(%rip),%rsi        # 40a8 <__TMC_END__>
    11ae:	48 29 fe             	sub    %rdi,%rsi
    11b1:	48 89 f0             	mov    %rsi,%rax
    11b4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    11b8:	48 c1 f8 03          	sar    $0x3,%rax
    11bc:	48 01 c6             	add    %rax,%rsi
    11bf:	48 d1 fe             	sar    %rsi
    11c2:	74 14                	je     11d8 <register_tm_clones+0x38>
    11c4:	48 8b 05 25 2e 00 00 	mov    0x2e25(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    11cb:	48 85 c0             	test   %rax,%rax
    11ce:	74 08                	je     11d8 <register_tm_clones+0x38>
    11d0:	ff e0                	jmpq   *%rax
    11d2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    11d8:	c3                   	retq   
    11d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000011e0 <__do_global_dtors_aux>:
    11e0:	80 3d c1 2e 00 00 00 	cmpb   $0x0,0x2ec1(%rip)        # 40a8 <__TMC_END__>
    11e7:	75 2f                	jne    1218 <__do_global_dtors_aux+0x38>
    11e9:	55                   	push   %rbp
    11ea:	48 83 3d 06 2e 00 00 	cmpq   $0x0,0x2e06(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    11f1:	00 
    11f2:	48 89 e5             	mov    %rsp,%rbp
    11f5:	74 0c                	je     1203 <__do_global_dtors_aux+0x23>
    11f7:	48 8b 3d a2 2e 00 00 	mov    0x2ea2(%rip),%rdi        # 40a0 <__dso_handle>
    11fe:	e8 2d ff ff ff       	callq  1130 <__cxa_finalize@plt>
    1203:	e8 68 ff ff ff       	callq  1170 <deregister_tm_clones>
    1208:	c6 05 99 2e 00 00 01 	movb   $0x1,0x2e99(%rip)        # 40a8 <__TMC_END__>
    120f:	5d                   	pop    %rbp
    1210:	c3                   	retq   
    1211:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1218:	c3                   	retq   
    1219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001220 <frame_dummy>:
    1220:	e9 7b ff ff ff       	jmpq   11a0 <register_tm_clones>

0000000000001225 <get_time_diff_in_s>:
    1225:	55                   	push   %rbp
    1226:	48 89 e5             	mov    %rsp,%rbp
    1229:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    122d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    1231:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1235:	48 8b 10             	mov    (%rax),%rdx
    1238:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    123c:	48 8b 00             	mov    (%rax),%rax
    123f:	48 29 c2             	sub    %rax,%rdx
    1242:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1246:	df 6d e8             	fildll -0x18(%rbp)
    1249:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    124d:	48 8b 50 08          	mov    0x8(%rax),%rdx
    1251:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1255:	48 8b 40 08          	mov    0x8(%rax),%rax
    1259:	48 29 c2             	sub    %rax,%rdx
    125c:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    1260:	df 6d e8             	fildll -0x18(%rbp)
    1263:	dd 05 f7 0d 00 00    	fldl   0xdf7(%rip)        # 2060 <_IO_stdin_used+0x60>
    1269:	dd 5d e8             	fstpl  -0x18(%rbp)
    126c:	dc 75 e8             	fdivl  -0x18(%rbp)
    126f:	de c1                	faddp  %st,%st(1)
    1271:	d9 5d e8             	fstps  -0x18(%rbp)
    1274:	f3 0f 10 45 e8       	movss  -0x18(%rbp),%xmm0
    1279:	5d                   	pop    %rbp
    127a:	c3                   	retq   

000000000000127b <write_times>:
    127b:	55                   	push   %rbp
    127c:	48 89 e5             	mov    %rsp,%rbp
    127f:	48 83 ec 30          	sub    $0x30,%rsp
    1283:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1287:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    128a:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
    128e:	89 4d e0             	mov    %ecx,-0x20(%rbp)
    1291:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1295:	48 89 c1             	mov    %rax,%rcx
    1298:	ba 08 00 00 00       	mov    $0x8,%edx
    129d:	be 01 00 00 00       	mov    $0x1,%esi
    12a2:	48 8d 3d 5f 0d 00 00 	lea    0xd5f(%rip),%rdi        # 2008 <_IO_stdin_used+0x8>
    12a9:	e8 62 fe ff ff       	callq  1110 <fwrite@plt>
    12ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b2:	48 8b 10             	mov    (%rax),%rdx
    12b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12b9:	48 89 50 10          	mov    %rdx,0x10(%rax)
    12bd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c1:	48 8b 50 08          	mov    0x8(%rax),%rdx
    12c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12c9:	48 89 50 18          	mov    %rdx,0x18(%rax)
    12cd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    12d4:	eb 7a                	jmp    1350 <write_times+0xd5>
    12d6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12da:	48 8b 50 18          	mov    0x18(%rax),%rdx
    12de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    12e2:	48 8b 40 10          	mov    0x10(%rax),%rax
    12e6:	48 89 d6             	mov    %rdx,%rsi
    12e9:	48 89 c7             	mov    %rax,%rdi
    12ec:	e8 34 ff ff ff       	callq  1225 <get_time_diff_in_s>
    12f1:	0f 57 c9             	xorps  %xmm1,%xmm1
    12f4:	f3 0f 2a 4d e0       	cvtsi2ssl -0x20(%rbp),%xmm1
    12f9:	f3 0f 5e c1          	divss  %xmm1,%xmm0
    12fd:	f3 0f 11 45 d0       	movss  %xmm0,-0x30(%rbp)
    1302:	d9 45 d0             	flds   -0x30(%rbp)
    1305:	dd 5d d0             	fstpl  -0x30(%rbp)
    1308:	0f 12 45 d0          	movlps -0x30(%rbp),%xmm0
    130c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1310:	48 8d 35 fa 0c 00 00 	lea    0xcfa(%rip),%rsi        # 2011 <_IO_stdin_used+0x11>
    1317:	48 89 c7             	mov    %rax,%rdi
    131a:	b8 01 00 00 00       	mov    $0x1,%eax
    131f:	e8 9c fd ff ff       	callq  10c0 <fprintf@plt>
    1324:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1328:	48 8b 40 10          	mov    0x10(%rax),%rax
    132c:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1330:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1334:	48 89 50 10          	mov    %rdx,0x10(%rax)
    1338:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    133c:	48 8b 40 18          	mov    0x18(%rax),%rax
    1340:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1344:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1348:	48 89 50 18          	mov    %rdx,0x18(%rax)
    134c:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1350:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1353:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    1356:	0f 8c 7a ff ff ff    	jl     12d6 <write_times+0x5b>
    135c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1360:	48 8b 00             	mov    (%rax),%rax
    1363:	48 89 c7             	mov    %rax,%rdi
    1366:	e8 c5 fc ff ff       	callq  1030 <free@plt>
    136b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    136f:	48 8b 40 08          	mov    0x8(%rax),%rax
    1373:	48 89 c7             	mov    %rax,%rdi
    1376:	e8 b5 fc ff ff       	callq  1030 <free@plt>
    137b:	90                   	nop
    137c:	c9                   	leaveq 
    137d:	c3                   	retq   

000000000000137e <visualize>:
    137e:	55                   	push   %rbp
    137f:	48 89 e5             	mov    %rsp,%rbp
    1382:	48 83 ec 50          	sub    $0x50,%rsp
    1386:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
    138a:	89 75 b4             	mov    %esi,-0x4c(%rbp)
    138d:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1391:	89 c1                	mov    %eax,%ecx
    1393:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1397:	ba 00 00 00 00       	mov    $0x0,%edx
    139c:	89 ce                	mov    %ecx,%esi
    139e:	89 c7                	mov    %eax,%edi
    13a0:	e8 6a 09 00 00       	callq  1d0f <init_board>
    13a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    13a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13ad:	89 c1                	mov    %eax,%ecx
    13af:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    13b3:	ba 00 00 00 00       	mov    $0x0,%edx
    13b8:	89 ce                	mov    %ecx,%esi
    13ba:	89 c7                	mov    %eax,%edi
    13bc:	e8 4e 09 00 00       	callq  1d0f <init_board>
    13c1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    13c5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    13cc:	eb 64                	jmp    1432 <visualize+0xb4>
    13ce:	8b 55 ec             	mov    -0x14(%rbp),%edx
    13d1:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
    13d5:	89 d1                	mov    %edx,%ecx
    13d7:	48 8d 15 3a 0c 00 00 	lea    0xc3a(%rip),%rdx        # 2018 <_IO_stdin_used+0x18>
    13de:	be 14 00 00 00       	mov    $0x14,%esi
    13e3:	48 89 c7             	mov    %rax,%rdi
    13e6:	b8 00 00 00 00       	mov    $0x0,%eax
    13eb:	e8 90 fc ff ff       	callq  1080 <snprintf@plt>
    13f0:	48 8d 55 c0          	lea    -0x40(%rbp),%rdx
    13f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    13f8:	48 89 d6             	mov    %rdx,%rsi
    13fb:	48 89 c7             	mov    %rax,%rdi
    13fe:	e8 b4 03 00 00       	callq  17b7 <create_pbm>
    1403:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1407:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    140b:	48 89 d6             	mov    %rdx,%rsi
    140e:	48 89 c7             	mov    %rax,%rdi
    1411:	e8 54 08 00 00       	callq  1c6a <update_board>
    1416:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    141a:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    141e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1422:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1426:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    142a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    142e:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1432:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1435:	3b 45 b4             	cmp    -0x4c(%rbp),%eax
    1438:	7c 94                	jl     13ce <visualize+0x50>
    143a:	90                   	nop
    143b:	90                   	nop
    143c:	c9                   	leaveq 
    143d:	c3                   	retq   

000000000000143e <measure>:
    143e:	55                   	push   %rbp
    143f:	48 89 e5             	mov    %rsp,%rbp
    1442:	48 83 ec 50          	sub    $0x50,%rsp
    1446:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
    144a:	89 75 c4             	mov    %esi,-0x3c(%rbp)
    144d:	89 55 c0             	mov    %edx,-0x40(%rbp)
    1450:	48 89 4d b8          	mov    %rcx,-0x48(%rbp)
    1454:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1457:	48 98                	cltq   
    1459:	48 c1 e0 04          	shl    $0x4,%rax
    145d:	48 89 c7             	mov    %rax,%rdi
    1460:	e8 7b fc ff ff       	callq  10e0 <malloc@plt>
    1465:	48 89 c2             	mov    %rax,%rdx
    1468:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    146c:	48 89 10             	mov    %rdx,(%rax)
    146f:	8b 45 c4             	mov    -0x3c(%rbp),%eax
    1472:	48 98                	cltq   
    1474:	48 c1 e0 04          	shl    $0x4,%rax
    1478:	48 89 c7             	mov    %rax,%rdi
    147b:	e8 60 fc ff ff       	callq  10e0 <malloc@plt>
    1480:	48 89 c2             	mov    %rax,%rdx
    1483:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1487:	48 89 50 08          	mov    %rdx,0x8(%rax)
    148b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    148f:	48 8b 10             	mov    (%rax),%rdx
    1492:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1496:	48 89 50 10          	mov    %rdx,0x10(%rax)
    149a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    149e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    14a2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    14a6:	48 89 50 18          	mov    %rdx,0x18(%rax)
    14aa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14ae:	48 0f af c0          	imul   %rax,%rax
    14b2:	48 c1 e8 03          	shr    $0x3,%rax
    14b6:	89 c2                	mov    %eax,%edx
    14b8:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14bc:	89 c1                	mov    %eax,%ecx
    14be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14c2:	89 ce                	mov    %ecx,%esi
    14c4:	89 c7                	mov    %eax,%edi
    14c6:	e8 44 08 00 00       	callq  1d0f <init_board>
    14cb:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    14cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14d3:	48 0f af c0          	imul   %rax,%rax
    14d7:	48 c1 e8 03          	shr    $0x3,%rax
    14db:	89 c2                	mov    %eax,%edx
    14dd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e1:	89 c1                	mov    %eax,%ecx
    14e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
    14e7:	89 ce                	mov    %ecx,%esi
    14e9:	89 c7                	mov    %eax,%edi
    14eb:	e8 1f 08 00 00       	callq  1d0f <init_board>
    14f0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    14f4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    14fb:	e9 a6 00 00 00       	jmpq   15a6 <measure+0x168>
    1500:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1504:	48 89 c7             	mov    %rax,%rdi
    1507:	e8 59 04 00 00       	callq  1965 <create_board_copy>
    150c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1510:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1514:	48 8b 40 10          	mov    0x10(%rax),%rax
    1518:	48 89 c6             	mov    %rax,%rsi
    151b:	bf 01 00 00 00       	mov    $0x1,%edi
    1520:	e8 2b fb ff ff       	callq  1050 <clock_gettime@plt>
    1525:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%rbp)
    152c:	eb 2f                	jmp    155d <measure+0x11f>
    152e:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1532:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1536:	48 89 d6             	mov    %rdx,%rsi
    1539:	48 89 c7             	mov    %rax,%rdi
    153c:	e8 29 07 00 00       	callq  1c6a <update_board>
    1541:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1545:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
    1549:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    154d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    1551:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1555:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    1559:	83 45 e8 01          	addl   $0x1,-0x18(%rbp)
    155d:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1560:	3b 45 c0             	cmp    -0x40(%rbp),%eax
    1563:	7c c9                	jl     152e <measure+0xf0>
    1565:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1569:	48 8b 40 18          	mov    0x18(%rax),%rax
    156d:	48 89 c6             	mov    %rax,%rsi
    1570:	bf 01 00 00 00       	mov    $0x1,%edi
    1575:	e8 d6 fa ff ff       	callq  1050 <clock_gettime@plt>
    157a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    157e:	48 8b 40 10          	mov    0x10(%rax),%rax
    1582:	48 8d 50 10          	lea    0x10(%rax),%rdx
    1586:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    158a:	48 89 50 10          	mov    %rdx,0x10(%rax)
    158e:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    1592:	48 8b 40 18          	mov    0x18(%rax),%rax
    1596:	48 8d 50 10          	lea    0x10(%rax),%rdx
    159a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    159e:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15a2:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    15a6:	8b 45 ec             	mov    -0x14(%rbp),%eax
    15a9:	3b 45 c4             	cmp    -0x3c(%rbp),%eax
    15ac:	0f 8c 4e ff ff ff    	jl     1500 <measure+0xc2>
    15b2:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15b6:	48 8b 10             	mov    (%rax),%rdx
    15b9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15bd:	48 89 50 10          	mov    %rdx,0x10(%rax)
    15c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15c5:	48 8b 50 08          	mov    0x8(%rax),%rdx
    15c9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
    15cd:	48 89 50 18          	mov    %rdx,0x18(%rax)
    15d1:	90                   	nop
    15d2:	c9                   	leaveq 
    15d3:	c3                   	retq   

00000000000015d4 <concat>:
    15d4:	55                   	push   %rbp
    15d5:	48 89 e5             	mov    %rsp,%rbp
    15d8:	53                   	push   %rbx
    15d9:	48 83 ec 28          	sub    $0x28,%rsp
    15dd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    15e1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    15e5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    15e9:	48 89 c7             	mov    %rax,%rdi
    15ec:	e8 7f fa ff ff       	callq  1070 <strlen@plt>
    15f1:	48 89 c3             	mov    %rax,%rbx
    15f4:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    15f8:	48 89 c7             	mov    %rax,%rdi
    15fb:	e8 70 fa ff ff       	callq  1070 <strlen@plt>
    1600:	48 01 d8             	add    %rbx,%rax
    1603:	48 83 c0 01          	add    $0x1,%rax
    1607:	48 89 c7             	mov    %rax,%rdi
    160a:	e8 d1 fa ff ff       	callq  10e0 <malloc@plt>
    160f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    1613:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1617:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    161b:	48 89 d6             	mov    %rdx,%rsi
    161e:	48 89 c7             	mov    %rax,%rdi
    1621:	e8 1a fa ff ff       	callq  1040 <strcpy@plt>
    1626:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
    162a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    162e:	48 89 d6             	mov    %rdx,%rsi
    1631:	48 89 c7             	mov    %rax,%rdi
    1634:	e8 c7 fa ff ff       	callq  1100 <strcat@plt>
    1639:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    163d:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1641:	c9                   	leaveq 
    1642:	c3                   	retq   

0000000000001643 <main>:
    1643:	55                   	push   %rbp
    1644:	48 89 e5             	mov    %rsp,%rbp
    1647:	48 81 ec f0 00 00 00 	sub    $0xf0,%rsp
    164e:	89 bd 1c ff ff ff    	mov    %edi,-0xe4(%rbp)
    1654:	48 89 b5 10 ff ff ff 	mov    %rsi,-0xf0(%rbp)
    165b:	c7 45 fc 14 00 00 00 	movl   $0x14,-0x4(%rbp)
    1662:	c7 85 20 ff ff ff 64 	movl   $0x64,-0xe0(%rbp)
    1669:	00 00 00 
    166c:	c7 85 24 ff ff ff 32 	movl   $0x32,-0xdc(%rbp)
    1673:	00 00 00 
    1676:	c7 85 28 ff ff ff 14 	movl   $0x14,-0xd8(%rbp)
    167d:	00 00 00 
    1680:	c7 85 2c ff ff ff 01 	movl   $0x1,-0xd4(%rbp)
    1687:	00 00 00 
    168a:	c7 85 30 ff ff ff 01 	movl   $0x1,-0xd0(%rbp)
    1691:	00 00 00 
    1694:	48 8d 35 8e 09 00 00 	lea    0x98e(%rip),%rsi        # 2029 <_IO_stdin_used+0x29>
    169b:	48 8d 3d 8b 09 00 00 	lea    0x98b(%rip),%rdi        # 202d <_IO_stdin_used+0x2d>
    16a2:	e8 2d ff ff ff       	callq  15d4 <concat>
    16a7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    16ab:	8b 95 20 ff ff ff    	mov    -0xe0(%rbp),%edx
    16b1:	48 8d 8d 40 ff ff ff 	lea    -0xc0(%rbp),%rcx
    16b8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16bb:	89 c6                	mov    %eax,%esi
    16bd:	bf 80 00 00 00       	mov    $0x80,%edi
    16c2:	e8 77 fd ff ff       	callq  143e <measure>
    16c7:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    16cd:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    16d4:	48 8d 48 20          	lea    0x20(%rax),%rcx
    16d8:	8b 45 fc             	mov    -0x4(%rbp),%eax
    16db:	89 c6                	mov    %eax,%esi
    16dd:	bf 00 02 00 00       	mov    $0x200,%edi
    16e2:	e8 57 fd ff ff       	callq  143e <measure>
    16e7:	48 8d 35 53 09 00 00 	lea    0x953(%rip),%rsi        # 2041 <_IO_stdin_used+0x41>
    16ee:	48 8d 3d 59 09 00 00 	lea    0x959(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    16f5:	e8 da fe ff ff       	callq  15d4 <concat>
    16fa:	48 89 c2             	mov    %rax,%rdx
    16fd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1701:	48 89 d6             	mov    %rdx,%rsi
    1704:	48 89 c7             	mov    %rax,%rdi
    1707:	e8 c8 fe ff ff       	callq  15d4 <concat>
    170c:	48 8d 35 3d 09 00 00 	lea    0x93d(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1713:	48 89 c7             	mov    %rax,%rdi
    1716:	e8 d5 f9 ff ff       	callq  10f0 <fopen@plt>
    171b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    171f:	8b 8d 20 ff ff ff    	mov    -0xe0(%rbp),%ecx
    1725:	48 8d 95 40 ff ff ff 	lea    -0xc0(%rbp),%rdx
    172c:	8b 75 fc             	mov    -0x4(%rbp),%esi
    172f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1733:	48 89 c7             	mov    %rax,%rdi
    1736:	e8 40 fb ff ff       	callq  127b <write_times>
    173b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    173f:	48 89 c7             	mov    %rax,%rdi
    1742:	e8 19 f9 ff ff       	callq  1060 <fclose@plt>
    1747:	48 8d 35 04 09 00 00 	lea    0x904(%rip),%rsi        # 2052 <_IO_stdin_used+0x52>
    174e:	48 8d 3d f9 08 00 00 	lea    0x8f9(%rip),%rdi        # 204e <_IO_stdin_used+0x4e>
    1755:	e8 7a fe ff ff       	callq  15d4 <concat>
    175a:	48 89 c2             	mov    %rax,%rdx
    175d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1761:	48 89 d6             	mov    %rdx,%rsi
    1764:	48 89 c7             	mov    %rax,%rdi
    1767:	e8 68 fe ff ff       	callq  15d4 <concat>
    176c:	48 8d 35 dd 08 00 00 	lea    0x8dd(%rip),%rsi        # 2050 <_IO_stdin_used+0x50>
    1773:	48 89 c7             	mov    %rax,%rdi
    1776:	e8 75 f9 ff ff       	callq  10f0 <fopen@plt>
    177b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
    177f:	8b 95 24 ff ff ff    	mov    -0xdc(%rbp),%edx
    1785:	48 8d 85 40 ff ff ff 	lea    -0xc0(%rbp),%rax
    178c:	48 8d 78 20          	lea    0x20(%rax),%rdi
    1790:	8b 75 fc             	mov    -0x4(%rbp),%esi
    1793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1797:	89 d1                	mov    %edx,%ecx
    1799:	48 89 fa             	mov    %rdi,%rdx
    179c:	48 89 c7             	mov    %rax,%rdi
    179f:	e8 d7 fa ff ff       	callq  127b <write_times>
    17a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    17a8:	48 89 c7             	mov    %rax,%rdi
    17ab:	e8 b0 f8 ff ff       	callq  1060 <fclose@plt>
    17b0:	b8 00 00 00 00       	mov    $0x0,%eax
    17b5:	c9                   	leaveq 
    17b6:	c3                   	retq   

00000000000017b7 <create_pbm>:
    17b7:	55                   	push   %rbp
    17b8:	48 89 e5             	mov    %rsp,%rbp
    17bb:	48 83 ec 30          	sub    $0x30,%rsp
    17bf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
    17c3:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
    17c7:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%rbp)
    17ce:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
    17d2:	48 8d 35 8f 08 00 00 	lea    0x88f(%rip),%rsi        # 2068 <_IO_stdin_used+0x68>
    17d9:	48 89 c7             	mov    %rax,%rdi
    17dc:	e8 0f f9 ff ff       	callq  10f0 <fopen@plt>
    17e1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    17e5:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    17e9:	48 89 c1             	mov    %rax,%rcx
    17ec:	ba 03 00 00 00       	mov    $0x3,%edx
    17f1:	be 01 00 00 00       	mov    $0x1,%esi
    17f6:	48 8d 3d 6e 08 00 00 	lea    0x86e(%rip),%rdi        # 206b <_IO_stdin_used+0x6b>
    17fd:	e8 0e f9 ff ff       	callq  1110 <fwrite@plt>
    1802:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1806:	8b 00                	mov    (%rax),%eax
    1808:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    180c:	89 c1                	mov    %eax,%ecx
    180e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    1812:	8b 40 04             	mov    0x4(%rax),%eax
    1815:	0f af 45 ec          	imul   -0x14(%rbp),%eax
    1819:	89 c2                	mov    %eax,%edx
    181b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    181f:	48 8d 35 49 08 00 00 	lea    0x849(%rip),%rsi        # 206f <_IO_stdin_used+0x6f>
    1826:	48 89 c7             	mov    %rax,%rdi
    1829:	b8 00 00 00 00       	mov    $0x0,%eax
    182e:	e8 8d f8 ff ff       	callq  10c0 <fprintf@plt>
    1833:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    183a:	e9 94 00 00 00       	jmpq   18d3 <create_pbm+0x11c>
    183f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
    1846:	eb 7b                	jmp    18c3 <create_pbm+0x10c>
    1848:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    184f:	eb 51                	jmp    18a2 <create_pbm+0xeb>
    1851:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
    1858:	eb 3c                	jmp    1896 <create_pbm+0xdf>
    185a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    185e:	8b 40 04             	mov    0x4(%rax),%eax
    1861:	0f af 45 fc          	imul   -0x4(%rbp),%eax
    1865:	89 c2                	mov    %eax,%edx
    1867:	8b 45 f8             	mov    -0x8(%rbp),%eax
    186a:	01 d0                	add    %edx,%eax
    186c:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
    1870:	48 98                	cltq   
    1872:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1877:	0f b6 d0             	movzbl %al,%edx
    187a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    187e:	48 8d 35 f1 07 00 00 	lea    0x7f1(%rip),%rsi        # 2076 <_IO_stdin_used+0x76>
    1885:	48 89 c7             	mov    %rax,%rdi
    1888:	b8 00 00 00 00       	mov    $0x0,%eax
    188d:	e8 2e f8 ff ff       	callq  10c0 <fprintf@plt>
    1892:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
    1896:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1899:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    189c:	7c bc                	jl     185a <create_pbm+0xa3>
    189e:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    18a2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18a6:	8b 40 04             	mov    0x4(%rax),%eax
    18a9:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    18ac:	7c a3                	jl     1851 <create_pbm+0x9a>
    18ae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    18b2:	48 89 c6             	mov    %rax,%rsi
    18b5:	bf 0a 00 00 00       	mov    $0xa,%edi
    18ba:	e8 d1 f7 ff ff       	callq  1090 <fputc@plt>
    18bf:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
    18c3:	8b 45 f4             	mov    -0xc(%rbp),%eax
    18c6:	3b 45 ec             	cmp    -0x14(%rbp),%eax
    18c9:	0f 8c 79 ff ff ff    	jl     1848 <create_pbm+0x91>
    18cf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    18d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
    18d7:	8b 00                	mov    (%rax),%eax
    18d9:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    18dc:	0f 8c 5d ff ff ff    	jl     183f <create_pbm+0x88>
    18e2:	90                   	nop
    18e3:	90                   	nop
    18e4:	c9                   	leaveq 
    18e5:	c3                   	retq   

00000000000018e6 <board_compare>:
    18e6:	55                   	push   %rbp
    18e7:	48 89 e5             	mov    %rsp,%rbp
    18ea:	48 83 ec 10          	sub    $0x10,%rsp
    18ee:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    18f2:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    18f6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    18fa:	8b 10                	mov    (%rax),%edx
    18fc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1900:	8b 00                	mov    (%rax),%eax
    1902:	39 c2                	cmp    %eax,%edx
    1904:	74 07                	je     190d <board_compare+0x27>
    1906:	b8 00 00 00 00       	mov    $0x0,%eax
    190b:	eb 56                	jmp    1963 <board_compare+0x7d>
    190d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1911:	8b 50 04             	mov    0x4(%rax),%edx
    1914:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1918:	8b 40 04             	mov    0x4(%rax),%eax
    191b:	39 c2                	cmp    %eax,%edx
    191d:	74 07                	je     1926 <board_compare+0x40>
    191f:	b8 00 00 00 00       	mov    $0x0,%eax
    1924:	eb 3d                	jmp    1963 <board_compare+0x7d>
    1926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    192a:	8b 50 04             	mov    0x4(%rax),%edx
    192d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1931:	8b 00                	mov    (%rax),%eax
    1933:	0f af c2             	imul   %edx,%eax
    1936:	48 98                	cltq   
    1938:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    193c:	48 8d 72 08          	lea    0x8(%rdx),%rsi
    1940:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1944:	48 8d 4a 08          	lea    0x8(%rdx),%rcx
    1948:	48 89 c2             	mov    %rax,%rdx
    194b:	48 89 cf             	mov    %rcx,%rdi
    194e:	e8 4d f7 ff ff       	callq  10a0 <memcmp@plt>
    1953:	85 c0                	test   %eax,%eax
    1955:	74 07                	je     195e <board_compare+0x78>
    1957:	b8 00 00 00 00       	mov    $0x0,%eax
    195c:	eb 05                	jmp    1963 <board_compare+0x7d>
    195e:	b8 01 00 00 00       	mov    $0x1,%eax
    1963:	c9                   	leaveq 
    1964:	c3                   	retq   

0000000000001965 <create_board_copy>:
    1965:	55                   	push   %rbp
    1966:	48 89 e5             	mov    %rsp,%rbp
    1969:	48 83 ec 20          	sub    $0x20,%rsp
    196d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1971:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1975:	8b 10                	mov    (%rax),%edx
    1977:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    197b:	8b 40 04             	mov    0x4(%rax),%eax
    197e:	0f af c2             	imul   %edx,%eax
    1981:	48 98                	cltq   
    1983:	48 83 c0 08          	add    $0x8,%rax
    1987:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    198b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    198f:	48 89 c7             	mov    %rax,%rdi
    1992:	e8 49 f7 ff ff       	callq  10e0 <malloc@plt>
    1997:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
    199b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    199f:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
    19a3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19a7:	48 89 ce             	mov    %rcx,%rsi
    19aa:	48 89 c7             	mov    %rax,%rdi
    19ad:	e8 1e f7 ff ff       	callq  10d0 <memcpy@plt>
    19b2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19b6:	c9                   	leaveq 
    19b7:	c3                   	retq   

00000000000019b8 <coords_on_board>:
    19b8:	55                   	push   %rbp
    19b9:	48 89 e5             	mov    %rsp,%rbp
    19bc:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    19c0:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    19c4:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
    19c8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19cc:	8b 00                	mov    (%rax),%eax
    19ce:	85 c0                	test   %eax,%eax
    19d0:	78 19                	js     19eb <coords_on_board+0x33>
    19d2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19d6:	8b 10                	mov    (%rax),%edx
    19d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19dc:	8b 40 04             	mov    0x4(%rax),%eax
    19df:	39 c2                	cmp    %eax,%edx
    19e1:	7d 08                	jge    19eb <coords_on_board+0x33>
    19e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19e7:	8b 00                	mov    (%rax),%eax
    19e9:	eb 27                	jmp    1a12 <coords_on_board+0x5a>
    19eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    19ef:	8b 00                	mov    (%rax),%eax
    19f1:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    19f5:	8b 4a 04             	mov    0x4(%rdx),%ecx
    19f8:	99                   	cltd   
    19f9:	f7 f9                	idiv   %ecx
    19fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    19ff:	8b 40 04             	mov    0x4(%rax),%eax
    1a02:	01 c2                	add    %eax,%edx
    1a04:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a08:	8b 48 04             	mov    0x4(%rax),%ecx
    1a0b:	89 d0                	mov    %edx,%eax
    1a0d:	99                   	cltd   
    1a0e:	f7 f9                	idiv   %ecx
    1a10:	89 d0                	mov    %edx,%eax
    1a12:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
    1a16:	89 02                	mov    %eax,(%rdx)
    1a18:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a1c:	8b 00                	mov    (%rax),%eax
    1a1e:	85 c0                	test   %eax,%eax
    1a20:	78 18                	js     1a3a <coords_on_board+0x82>
    1a22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a26:	8b 10                	mov    (%rax),%edx
    1a28:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a2c:	8b 00                	mov    (%rax),%eax
    1a2e:	39 c2                	cmp    %eax,%edx
    1a30:	7d 08                	jge    1a3a <coords_on_board+0x82>
    1a32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a36:	8b 00                	mov    (%rax),%eax
    1a38:	eb 24                	jmp    1a5e <coords_on_board+0xa6>
    1a3a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1a3e:	8b 00                	mov    (%rax),%eax
    1a40:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1a44:	8b 0a                	mov    (%rdx),%ecx
    1a46:	99                   	cltd   
    1a47:	f7 f9                	idiv   %ecx
    1a49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a4d:	8b 00                	mov    (%rax),%eax
    1a4f:	01 c2                	add    %eax,%edx
    1a51:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a55:	8b 08                	mov    (%rax),%ecx
    1a57:	89 d0                	mov    %edx,%eax
    1a59:	99                   	cltd   
    1a5a:	f7 f9                	idiv   %ecx
    1a5c:	89 d0                	mov    %edx,%eax
    1a5e:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
    1a62:	89 02                	mov    %eax,(%rdx)
    1a64:	90                   	nop
    1a65:	5d                   	pop    %rbp
    1a66:	c3                   	retq   

0000000000001a67 <check_state>:
    1a67:	55                   	push   %rbp
    1a68:	48 89 e5             	mov    %rsp,%rbp
    1a6b:	48 83 ec 10          	sub    $0x10,%rsp
    1a6f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1a73:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1a76:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1a79:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1a7d:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1a81:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a85:	48 89 ce             	mov    %rcx,%rsi
    1a88:	48 89 c7             	mov    %rax,%rdi
    1a8b:	e8 28 ff ff ff       	callq  19b8 <coords_on_board>
    1a90:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1a94:	8b 50 04             	mov    0x4(%rax),%edx
    1a97:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1a9a:	0f af d0             	imul   %eax,%edx
    1a9d:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1aa0:	01 d0                	add    %edx,%eax
    1aa2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1aa6:	48 98                	cltq   
    1aa8:	0f b6 44 02 08       	movzbl 0x8(%rdx,%rax,1),%eax
    1aad:	c9                   	leaveq 
    1aae:	c3                   	retq   

0000000000001aaf <set_state>:
    1aaf:	55                   	push   %rbp
    1ab0:	48 89 e5             	mov    %rsp,%rbp
    1ab3:	48 83 ec 18          	sub    $0x18,%rsp
    1ab7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
    1abb:	89 75 f4             	mov    %esi,-0xc(%rbp)
    1abe:	89 55 f0             	mov    %edx,-0x10(%rbp)
    1ac1:	89 c8                	mov    %ecx,%eax
    1ac3:	88 45 ec             	mov    %al,-0x14(%rbp)
    1ac6:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
    1aca:	48 8d 4d f4          	lea    -0xc(%rbp),%rcx
    1ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ad2:	48 89 ce             	mov    %rcx,%rsi
    1ad5:	48 89 c7             	mov    %rax,%rdi
    1ad8:	e8 db fe ff ff       	callq  19b8 <coords_on_board>
    1add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
    1ae1:	8b 50 04             	mov    0x4(%rax),%edx
    1ae4:	8b 45 f0             	mov    -0x10(%rbp),%eax
    1ae7:	0f af d0             	imul   %eax,%edx
    1aea:	8b 45 f4             	mov    -0xc(%rbp),%eax
    1aed:	01 d0                	add    %edx,%eax
    1aef:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1af3:	48 98                	cltq   
    1af5:	0f b6 4d ec          	movzbl -0x14(%rbp),%ecx
    1af9:	88 4c 02 08          	mov    %cl,0x8(%rdx,%rax,1)
    1afd:	90                   	nop
    1afe:	c9                   	leaveq 
    1aff:	c3                   	retq   

0000000000001b00 <get_num_neighbours>:
    1b00:	55                   	push   %rbp
    1b01:	48 89 e5             	mov    %rsp,%rbp
    1b04:	53                   	push   %rbx
    1b05:	48 83 ec 10          	sub    $0x10,%rsp
    1b09:	48 89 7d f0          	mov    %rdi,-0x10(%rbp)
    1b0d:	89 75 ec             	mov    %esi,-0x14(%rbp)
    1b10:	89 55 e8             	mov    %edx,-0x18(%rbp)
    1b13:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b16:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b19:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b1c:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b1f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b23:	89 ce                	mov    %ecx,%esi
    1b25:	48 89 c7             	mov    %rax,%rdi
    1b28:	e8 3a ff ff ff       	callq  1a67 <check_state>
    1b2d:	0f b6 d8             	movzbl %al,%ebx
    1b30:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b33:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b36:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1b39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b3d:	89 ce                	mov    %ecx,%esi
    1b3f:	48 89 c7             	mov    %rax,%rdi
    1b42:	e8 20 ff ff ff       	callq  1a67 <check_state>
    1b47:	0f b6 c0             	movzbl %al,%eax
    1b4a:	01 c3                	add    %eax,%ebx
    1b4c:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1b4f:	8d 50 ff             	lea    -0x1(%rax),%edx
    1b52:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b55:	8d 48 01             	lea    0x1(%rax),%ecx
    1b58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b5c:	89 ce                	mov    %ecx,%esi
    1b5e:	48 89 c7             	mov    %rax,%rdi
    1b61:	e8 01 ff ff ff       	callq  1a67 <check_state>
    1b66:	0f b6 c0             	movzbl %al,%eax
    1b69:	01 c3                	add    %eax,%ebx
    1b6b:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b6e:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1b71:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b74:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b78:	89 ce                	mov    %ecx,%esi
    1b7a:	48 89 c7             	mov    %rax,%rdi
    1b7d:	e8 e5 fe ff ff       	callq  1a67 <check_state>
    1b82:	0f b6 c0             	movzbl %al,%eax
    1b85:	01 c3                	add    %eax,%ebx
    1b87:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1b8a:	8d 48 01             	lea    0x1(%rax),%ecx
    1b8d:	8b 55 e8             	mov    -0x18(%rbp),%edx
    1b90:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1b94:	89 ce                	mov    %ecx,%esi
    1b96:	48 89 c7             	mov    %rax,%rdi
    1b99:	e8 c9 fe ff ff       	callq  1a67 <check_state>
    1b9e:	0f b6 c0             	movzbl %al,%eax
    1ba1:	01 c3                	add    %eax,%ebx
    1ba3:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1ba6:	8d 50 01             	lea    0x1(%rax),%edx
    1ba9:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1bac:	8d 48 ff             	lea    -0x1(%rax),%ecx
    1baf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bb3:	89 ce                	mov    %ecx,%esi
    1bb5:	48 89 c7             	mov    %rax,%rdi
    1bb8:	e8 aa fe ff ff       	callq  1a67 <check_state>
    1bbd:	0f b6 c0             	movzbl %al,%eax
    1bc0:	01 c3                	add    %eax,%ebx
    1bc2:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1bc5:	8d 50 01             	lea    0x1(%rax),%edx
    1bc8:	8b 4d ec             	mov    -0x14(%rbp),%ecx
    1bcb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bcf:	89 ce                	mov    %ecx,%esi
    1bd1:	48 89 c7             	mov    %rax,%rdi
    1bd4:	e8 8e fe ff ff       	callq  1a67 <check_state>
    1bd9:	0f b6 c0             	movzbl %al,%eax
    1bdc:	01 c3                	add    %eax,%ebx
    1bde:	8b 45 e8             	mov    -0x18(%rbp),%eax
    1be1:	8d 50 01             	lea    0x1(%rax),%edx
    1be4:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1be7:	8d 48 01             	lea    0x1(%rax),%ecx
    1bea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1bee:	89 ce                	mov    %ecx,%esi
    1bf0:	48 89 c7             	mov    %rax,%rdi
    1bf3:	e8 6f fe ff ff       	callq  1a67 <check_state>
    1bf8:	0f b6 c0             	movzbl %al,%eax
    1bfb:	01 d8                	add    %ebx,%eax
    1bfd:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1c01:	c9                   	leaveq 
    1c02:	c3                   	retq   

0000000000001c03 <get_new_state>:
    1c03:	55                   	push   %rbp
    1c04:	48 89 e5             	mov    %rsp,%rbp
    1c07:	48 83 ec 20          	sub    $0x20,%rsp
    1c0b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c0f:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    1c12:	89 55 e0             	mov    %edx,-0x20(%rbp)
    1c15:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c18:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c1b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c1f:	89 ce                	mov    %ecx,%esi
    1c21:	48 89 c7             	mov    %rax,%rdi
    1c24:	e8 d7 fe ff ff       	callq  1b00 <get_num_neighbours>
    1c29:	89 45 fc             	mov    %eax,-0x4(%rbp)
    1c2c:	8b 55 e0             	mov    -0x20(%rbp),%edx
    1c2f:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
    1c32:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c36:	89 ce                	mov    %ecx,%esi
    1c38:	48 89 c7             	mov    %rax,%rdi
    1c3b:	e8 27 fe ff ff       	callq  1a67 <check_state>
    1c40:	84 c0                	test   %al,%al
    1c42:	74 1d                	je     1c61 <get_new_state+0x5e>
    1c44:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
    1c48:	7e 0d                	jle    1c57 <get_new_state+0x54>
    1c4a:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c4e:	7f 07                	jg     1c57 <get_new_state+0x54>
    1c50:	b8 01 00 00 00       	mov    $0x1,%eax
    1c55:	eb 05                	jmp    1c5c <get_new_state+0x59>
    1c57:	b8 00 00 00 00       	mov    $0x0,%eax
    1c5c:	83 e0 01             	and    $0x1,%eax
    1c5f:	eb 07                	jmp    1c68 <get_new_state+0x65>
    1c61:	83 7d fc 03          	cmpl   $0x3,-0x4(%rbp)
    1c65:	0f 94 c0             	sete   %al
    1c68:	c9                   	leaveq 
    1c69:	c3                   	retq   

0000000000001c6a <update_board>:
    1c6a:	55                   	push   %rbp
    1c6b:	48 89 e5             	mov    %rsp,%rbp
    1c6e:	48 83 ec 20          	sub    $0x20,%rsp
    1c72:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1c76:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
    1c7a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    1c81:	eb 46                	jmp    1cc9 <update_board+0x5f>
    1c83:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
    1c8a:	eb 2d                	jmp    1cb9 <update_board+0x4f>
    1c8c:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1c8f:	8b 4d f8             	mov    -0x8(%rbp),%ecx
    1c92:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1c96:	89 ce                	mov    %ecx,%esi
    1c98:	48 89 c7             	mov    %rax,%rdi
    1c9b:	e8 63 ff ff ff       	callq  1c03 <get_new_state>
    1ca0:	0f b6 c8             	movzbl %al,%ecx
    1ca3:	8b 55 fc             	mov    -0x4(%rbp),%edx
    1ca6:	8b 75 f8             	mov    -0x8(%rbp),%esi
    1ca9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1cad:	48 89 c7             	mov    %rax,%rdi
    1cb0:	e8 fa fd ff ff       	callq  1aaf <set_state>
    1cb5:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
    1cb9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1cbd:	8b 40 04             	mov    0x4(%rax),%eax
    1cc0:	39 45 f8             	cmp    %eax,-0x8(%rbp)
    1cc3:	7c c7                	jl     1c8c <update_board+0x22>
    1cc5:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    1cc9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1ccd:	8b 00                	mov    (%rax),%eax
    1ccf:	39 45 fc             	cmp    %eax,-0x4(%rbp)
    1cd2:	7c af                	jl     1c83 <update_board+0x19>
    1cd4:	90                   	nop
    1cd5:	90                   	nop
    1cd6:	c9                   	leaveq 
    1cd7:	c3                   	retq   

0000000000001cd8 <random_int>:
    1cd8:	55                   	push   %rbp
    1cd9:	48 89 e5             	mov    %rsp,%rbp
    1cdc:	48 83 ec 10          	sub    $0x10,%rsp
    1ce0:	89 7d fc             	mov    %edi,-0x4(%rbp)
    1ce3:	89 75 f8             	mov    %esi,-0x8(%rbp)
    1ce6:	e8 35 f4 ff ff       	callq  1120 <rand@plt>
    1ceb:	89 c1                	mov    %eax,%ecx
    1ced:	8b 45 f8             	mov    -0x8(%rbp),%eax
    1cf0:	2b 45 fc             	sub    -0x4(%rbp),%eax
    1cf3:	8d 70 01             	lea    0x1(%rax),%esi
    1cf6:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1cfb:	99                   	cltd   
    1cfc:	f7 fe                	idiv   %esi
    1cfe:	8d 78 01             	lea    0x1(%rax),%edi
    1d01:	89 c8                	mov    %ecx,%eax
    1d03:	99                   	cltd   
    1d04:	f7 ff                	idiv   %edi
    1d06:	89 c2                	mov    %eax,%edx
    1d08:	8b 45 fc             	mov    -0x4(%rbp),%eax
    1d0b:	01 d0                	add    %edx,%eax
    1d0d:	c9                   	leaveq 
    1d0e:	c3                   	retq   

0000000000001d0f <init_board>:
    1d0f:	55                   	push   %rbp
    1d10:	48 89 e5             	mov    %rsp,%rbp
    1d13:	53                   	push   %rbx
    1d14:	48 83 ec 28          	sub    $0x28,%rsp
    1d18:	89 7d dc             	mov    %edi,-0x24(%rbp)
    1d1b:	89 75 d8             	mov    %esi,-0x28(%rbp)
    1d1e:	89 55 d4             	mov    %edx,-0x2c(%rbp)
    1d21:	8b 45 dc             	mov    -0x24(%rbp),%eax
    1d24:	0f af 45 d8          	imul   -0x28(%rbp),%eax
    1d28:	48 98                	cltq   
    1d2a:	48 83 c0 08          	add    $0x8,%rax
    1d2e:	48 89 c6             	mov    %rax,%rsi
    1d31:	bf 01 00 00 00       	mov    $0x1,%edi
    1d36:	e8 75 f3 ff ff       	callq  10b0 <calloc@plt>
    1d3b:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
    1d3f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d43:	8b 55 dc             	mov    -0x24(%rbp),%edx
    1d46:	89 10                	mov    %edx,(%rax)
    1d48:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d4c:	8b 55 d8             	mov    -0x28(%rbp),%edx
    1d4f:	89 50 04             	mov    %edx,0x4(%rax)
    1d52:	83 7d d4 00          	cmpl   $0x0,-0x2c(%rbp)
    1d56:	74 56                	je     1dae <init_board+0x9f>
    1d58:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
    1d5f:	eb 40                	jmp    1da1 <init_board+0x92>
    1d61:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d65:	8b 00                	mov    (%rax),%eax
    1d67:	89 c6                	mov    %eax,%esi
    1d69:	bf 00 00 00 00       	mov    $0x0,%edi
    1d6e:	e8 65 ff ff ff       	callq  1cd8 <random_int>
    1d73:	89 c3                	mov    %eax,%ebx
    1d75:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d79:	8b 40 04             	mov    0x4(%rax),%eax
    1d7c:	89 c6                	mov    %eax,%esi
    1d7e:	bf 00 00 00 00       	mov    $0x0,%edi
    1d83:	e8 50 ff ff ff       	callq  1cd8 <random_int>
    1d88:	89 c6                	mov    %eax,%esi
    1d8a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1d8e:	b9 01 00 00 00       	mov    $0x1,%ecx
    1d93:	89 da                	mov    %ebx,%edx
    1d95:	48 89 c7             	mov    %rax,%rdi
    1d98:	e8 12 fd ff ff       	callq  1aaf <set_state>
    1d9d:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
    1da1:	8b 45 ec             	mov    -0x14(%rbp),%eax
    1da4:	3b 45 d4             	cmp    -0x2c(%rbp),%eax
    1da7:	7c b8                	jl     1d61 <init_board+0x52>
    1da9:	e9 87 00 00 00       	jmpq   1e35 <init_board+0x126>
    1dae:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1db2:	b9 01 00 00 00       	mov    $0x1,%ecx
    1db7:	ba 00 00 00 00       	mov    $0x0,%edx
    1dbc:	be 02 00 00 00       	mov    $0x2,%esi
    1dc1:	48 89 c7             	mov    %rax,%rdi
    1dc4:	e8 e6 fc ff ff       	callq  1aaf <set_state>
    1dc9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1dcd:	b9 01 00 00 00       	mov    $0x1,%ecx
    1dd2:	ba 01 00 00 00       	mov    $0x1,%edx
    1dd7:	be 00 00 00 00       	mov    $0x0,%esi
    1ddc:	48 89 c7             	mov    %rax,%rdi
    1ddf:	e8 cb fc ff ff       	callq  1aaf <set_state>
    1de4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1de8:	b9 01 00 00 00       	mov    $0x1,%ecx
    1ded:	ba 01 00 00 00       	mov    $0x1,%edx
    1df2:	be 02 00 00 00       	mov    $0x2,%esi
    1df7:	48 89 c7             	mov    %rax,%rdi
    1dfa:	e8 b0 fc ff ff       	callq  1aaf <set_state>
    1dff:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e03:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e08:	ba 02 00 00 00       	mov    $0x2,%edx
    1e0d:	be 01 00 00 00       	mov    $0x1,%esi
    1e12:	48 89 c7             	mov    %rax,%rdi
    1e15:	e8 95 fc ff ff       	callq  1aaf <set_state>
    1e1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e1e:	b9 01 00 00 00       	mov    $0x1,%ecx
    1e23:	ba 02 00 00 00       	mov    $0x2,%edx
    1e28:	be 02 00 00 00       	mov    $0x2,%esi
    1e2d:	48 89 c7             	mov    %rax,%rdi
    1e30:	e8 7a fc ff ff       	callq  1aaf <set_state>
    1e35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
    1e39:	48 8b 5d f8          	mov    -0x8(%rbp),%rbx
    1e3d:	c9                   	leaveq 
    1e3e:	c3                   	retq   
    1e3f:	90                   	nop

0000000000001e40 <__libc_csu_init>:
    1e40:	41 57                	push   %r15
    1e42:	4c 8d 3d 9f 1f 00 00 	lea    0x1f9f(%rip),%r15        # 3de8 <__frame_dummy_init_array_entry>
    1e49:	41 56                	push   %r14
    1e4b:	49 89 d6             	mov    %rdx,%r14
    1e4e:	41 55                	push   %r13
    1e50:	49 89 f5             	mov    %rsi,%r13
    1e53:	41 54                	push   %r12
    1e55:	41 89 fc             	mov    %edi,%r12d
    1e58:	55                   	push   %rbp
    1e59:	48 8d 2d 90 1f 00 00 	lea    0x1f90(%rip),%rbp        # 3df0 <__do_global_dtors_aux_fini_array_entry>
    1e60:	53                   	push   %rbx
    1e61:	4c 29 fd             	sub    %r15,%rbp
    1e64:	48 83 ec 08          	sub    $0x8,%rsp
    1e68:	e8 93 f1 ff ff       	callq  1000 <_init>
    1e6d:	48 c1 fd 03          	sar    $0x3,%rbp
    1e71:	74 1b                	je     1e8e <__libc_csu_init+0x4e>
    1e73:	31 db                	xor    %ebx,%ebx
    1e75:	0f 1f 00             	nopl   (%rax)
    1e78:	4c 89 f2             	mov    %r14,%rdx
    1e7b:	4c 89 ee             	mov    %r13,%rsi
    1e7e:	44 89 e7             	mov    %r12d,%edi
    1e81:	41 ff 14 df          	callq  *(%r15,%rbx,8)
    1e85:	48 83 c3 01          	add    $0x1,%rbx
    1e89:	48 39 dd             	cmp    %rbx,%rbp
    1e8c:	75 ea                	jne    1e78 <__libc_csu_init+0x38>
    1e8e:	48 83 c4 08          	add    $0x8,%rsp
    1e92:	5b                   	pop    %rbx
    1e93:	5d                   	pop    %rbp
    1e94:	41 5c                	pop    %r12
    1e96:	41 5d                	pop    %r13
    1e98:	41 5e                	pop    %r14
    1e9a:	41 5f                	pop    %r15
    1e9c:	c3                   	retq   
    1e9d:	0f 1f 00             	nopl   (%rax)

0000000000001ea0 <__libc_csu_fini>:
    1ea0:	c3                   	retq   

Disassembly of section .fini:

0000000000001ea4 <_fini>:
    1ea4:	48 83 ec 08          	sub    $0x8,%rsp
    1ea8:	48 83 c4 08          	add    $0x8,%rsp
    1eac:	c3                   	retq   

Disassembly of section .rodata:

0000000000002000 <_IO_stdin_used>:
    2000:	01 00                	add    %eax,(%rax)
    2002:	02 00                	add    (%rax),%al
    2004:	00 00                	add    %al,(%rax)
    2006:	00 00                	add    %al,(%rax)
    2008:	74 69                	je     2073 <_IO_stdin_used+0x73>
    200a:	6d                   	insl   (%dx),%es:(%rdi)
    200b:	65 5b                	gs pop %rbx
    200d:	73 5d                	jae    206c <_IO_stdin_used+0x6c>
    200f:	0a 00                	or     (%rax),%al
    2011:	25 32 2e 36 66       	and    $0x66362e32,%eax
    2016:	0a 00                	or     (%rax),%al
    2018:	70 62                	jo     207c <__GNU_EH_FRAME_HDR>
    201a:	6d                   	insl   (%dx),%es:(%rdi)
    201b:	73 2f                	jae    204c <_IO_stdin_used+0x4c>
    201d:	66 6f                	outsw  %ds:(%rsi),(%dx)
    201f:	6f                   	outsl  %ds:(%rsi),(%dx)
    2020:	25 30 33 64 2e       	and    $0x2e643330,%eax
    2025:	70 62                	jo     2089 <__GNU_EH_FRAME_HDR+0xd>
    2027:	6d                   	insl   (%dx),%es:(%rdi)
    2028:	00 67 63             	add    %ah,0x63(%rdi)
    202b:	63 00                	movsxd (%rax),%eax
    202d:	2e 2e 2f             	cs cs (bad) 
    2030:	65 76 61             	gs jbe 2094 <__GNU_EH_FRAME_HDR+0x18>
    2033:	6c                   	insb   (%dx),%es:(%rdi)
    2034:	75 61                	jne    2097 <__GNU_EH_FRAME_HDR+0x1b>
    2036:	74 69                	je     20a1 <__GNU_EH_FRAME_HDR+0x25>
    2038:	6f                   	outsl  %ds:(%rsi),(%dx)
    2039:	6e                   	outsb  %ds:(%rsi),(%dx)
    203a:	2f                   	(bad)  
    203b:	64 61                	fs (bad) 
    203d:	74 61                	je     20a0 <__GNU_EH_FRAME_HDR+0x24>
    203f:	2f                   	(bad)  
    2040:	00 74 69 6d          	add    %dh,0x6d(%rcx,%rbp,2)
    2044:	65 73 31             	gs jae 2078 <_IO_stdin_used+0x78>
    2047:	32 38                	xor    (%rax),%bh
    2049:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    204d:	00 2f                	add    %ch,(%rdi)
    204f:	00 77 00             	add    %dh,0x0(%rdi)
    2052:	74 69                	je     20bd <__GNU_EH_FRAME_HDR+0x41>
    2054:	6d                   	insl   (%dx),%es:(%rdi)
    2055:	65 73 35             	gs jae 208d <__GNU_EH_FRAME_HDR+0x11>
    2058:	31 32                	xor    %esi,(%rdx)
    205a:	2e 63 73 76          	movsxd %cs:0x76(%rbx),%esi
    205e:	00 00                	add    %al,(%rax)
    2060:	00 00                	add    %al,(%rax)
    2062:	00 00                	add    %al,(%rax)
    2064:	65 cd cd             	gs int $0xcd
    2067:	41 77 62             	rex.B ja 20cc <__GNU_EH_FRAME_HDR+0x50>
    206a:	00 50 31             	add    %dl,0x31(%rax)
    206d:	0a 00                	or     (%rax),%al
    206f:	25 64 20 25 64       	and    $0x64252064,%eax
    2074:	0a 00                	or     (%rax),%al
    2076:	25                   	.byte 0x25
    2077:	75 00                	jne    2079 <_IO_stdin_used+0x79>

Disassembly of section .eh_frame_hdr:

000000000000207c <__GNU_EH_FRAME_HDR>:
    207c:	01 1b                	add    %ebx,(%rbx)
    207e:	03 3b                	add    (%rbx),%edi
    2080:	b8 00 00 00 16       	mov    $0x16000000,%eax
    2085:	00 00                	add    %al,(%rax)
    2087:	00 a4 ef ff ff 04 01 	add    %ah,0x104ffff(%rdi,%rbp,8)
    208e:	00 00                	add    %al,(%rax)
    2090:	b4 f0                	mov    $0xf0,%ah
    2092:	ff                   	(bad)  
    2093:	ff 2c 01             	ljmp   *(%rcx,%rax,1)
    2096:	00 00                	add    %al,(%rax)
    2098:	c4                   	(bad)  
    2099:	f0 ff                	lock (bad) 
    209b:	ff d4                	callq  *%rsp
    209d:	00 00                	add    %al,(%rax)
    209f:	00 a9 f1 ff ff 44    	add    %ch,0x44fffff1(%rcx)
    20a5:	01 00                	add    %eax,(%rax)
    20a7:	00 ff                	add    %bh,%bh
    20a9:	f1                   	icebp  
    20aa:	ff                   	(bad)  
    20ab:	ff 64 01 00          	jmpq   *0x0(%rcx,%rax,1)
    20af:	00 02                	add    %al,(%rdx)
    20b1:	f3 ff                	repz (bad) 
    20b3:	ff 84 01 00 00 c2 f3 	incl   -0xc3e0000(%rcx,%rax,1)
    20ba:	ff                   	(bad)  
    20bb:	ff a4 01 00 00 58 f5 	jmpq   *-0xaa80000(%rcx,%rax,1)
    20c2:	ff                   	(bad)  
    20c3:	ff c4                	inc    %esp
    20c5:	01 00                	add    %eax,(%rax)
    20c7:	00 c7                	add    %al,%bh
    20c9:	f5                   	cmc    
    20ca:	ff                   	(bad)  
    20cb:	ff                   	(bad)  
    20cc:	e8 01 00 00 3b       	callq  3b0020d2 <_end+0x3affe022>
    20d1:	f7 ff                	idiv   %edi
    20d3:	ff 0c 02             	decl   (%rdx,%rax,1)
    20d6:	00 00                	add    %al,(%rax)
    20d8:	6a f8                	pushq  $0xfffffffffffffff8
    20da:	ff                   	(bad)  
    20db:	ff 2c 02             	ljmp   *(%rdx,%rax,1)
    20de:	00 00                	add    %al,(%rax)
    20e0:	e9 f8 ff ff 4c       	jmpq   4d0020dd <_end+0x4cffe02d>
    20e5:	02 00                	add    (%rax),%al
    20e7:	00 3c f9             	add    %bh,(%rcx,%rdi,8)
    20ea:	ff                   	(bad)  
    20eb:	ff 6c 02 00          	ljmp   *0x0(%rdx,%rax,1)
    20ef:	00 eb                	add    %ch,%bl
    20f1:	f9                   	stc    
    20f2:	ff                   	(bad)  
    20f3:	ff 8c 02 00 00 33 fa 	decl   -0x5cd0000(%rdx,%rax,1)
    20fa:	ff                   	(bad)  
    20fb:	ff ac 02 00 00 84 fa 	ljmp   *-0x57c0000(%rdx,%rax,1)
    2102:	ff                   	(bad)  
    2103:	ff cc                	dec    %esp
    2105:	02 00                	add    (%rax),%al
    2107:	00 87 fb ff ff f0    	add    %al,-0xf000005(%rdi)
    210d:	02 00                	add    (%rax),%al
    210f:	00 ee                	add    %ch,%dh
    2111:	fb                   	sti    
    2112:	ff                   	(bad)  
    2113:	ff 10                	callq  *(%rax)
    2115:	03 00                	add    (%rax),%eax
    2117:	00 5c fc ff          	add    %bl,-0x1(%rsp,%rdi,8)
    211b:	ff 30                	pushq  (%rax)
    211d:	03 00                	add    (%rax),%eax
    211f:	00 93 fc ff ff 50    	add    %dl,0x50fffffc(%rbx)
    2125:	03 00                	add    (%rax),%eax
    2127:	00 c4                	add    %al,%ah
    2129:	fd                   	std    
    212a:	ff                   	(bad)  
    212b:	ff 74 03 00          	pushq  0x0(%rbx,%rax,1)
    212f:	00 24 fe             	add    %ah,(%rsi,%rdi,8)
    2132:	ff                   	(bad)  
    2133:	ff                   	(bad)  
    2134:	bc                   	.byte 0xbc
    2135:	03 00                	add    (%rax),%eax
	...

Disassembly of section .eh_frame:

0000000000002138 <__FRAME_END__-0x314>:
    2138:	14 00                	adc    $0x0,%al
    213a:	00 00                	add    %al,(%rax)
    213c:	00 00                	add    %al,(%rax)
    213e:	00 00                	add    %al,(%rax)
    2140:	01 7a 52             	add    %edi,0x52(%rdx)
    2143:	00 01                	add    %al,(%rcx)
    2145:	78 10                	js     2157 <__GNU_EH_FRAME_HDR+0xdb>
    2147:	01 1b                	add    %ebx,(%rbx)
    2149:	0c 07                	or     $0x7,%al
    214b:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
    2151:	00 00                	add    %al,(%rax)
    2153:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2156:	00 00                	add    %al,(%rax)
    2158:	e8 ef ff ff 2b       	callq  2c00214c <_end+0x2bffe09c>
	...
    2165:	00 00                	add    %al,(%rax)
    2167:	00 14 00             	add    %dl,(%rax,%rax,1)
    216a:	00 00                	add    %al,(%rax)
    216c:	00 00                	add    %al,(%rax)
    216e:	00 00                	add    %al,(%rax)
    2170:	01 7a 52             	add    %edi,0x52(%rdx)
    2173:	00 01                	add    %al,(%rcx)
    2175:	78 10                	js     2187 <__GNU_EH_FRAME_HDR+0x10b>
    2177:	01 1b                	add    %ebx,(%rbx)
    2179:	0c 07                	or     $0x7,%al
    217b:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
    2181:	00 00                	add    %al,(%rax)
    2183:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2186:	00 00                	add    %al,(%rax)
    2188:	98                   	cwtl   
    2189:	ee                   	out    %al,(%dx)
    218a:	ff                   	(bad)  
    218b:	ff 10                	callq  *(%rax)
    218d:	01 00                	add    %eax,(%rax)
    218f:	00 00                	add    %al,(%rax)
    2191:	0e                   	(bad)  
    2192:	10 46 0e             	adc    %al,0xe(%rsi)
    2195:	18 4a 0f             	sbb    %cl,0xf(%rdx)
    2198:	0b 77 08             	or     0x8(%rdi),%esi
    219b:	80 00 3f             	addb   $0x3f,(%rax)
    219e:	1a 3b                	sbb    (%rbx),%bh
    21a0:	2a 33                	sub    (%rbx),%dh
    21a2:	24 22                	and    $0x22,%al
    21a4:	00 00                	add    %al,(%rax)
    21a6:	00 00                	add    %al,(%rax)
    21a8:	14 00                	adc    $0x0,%al
    21aa:	00 00                	add    %al,(%rax)
    21ac:	44 00 00             	add    %r8b,(%rax)
    21af:	00 80 ef ff ff 08    	add    %al,0x8ffffef(%rax)
	...
    21bd:	00 00                	add    %al,(%rax)
    21bf:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21c2:	00 00                	add    %al,(%rax)
    21c4:	5c                   	pop    %rsp
    21c5:	00 00                	add    %al,(%rax)
    21c7:	00 5d f0             	add    %bl,-0x10(%rbp)
    21ca:	ff                   	(bad)  
    21cb:	ff 56 00             	callq  *0x0(%rsi)
    21ce:	00 00                	add    %al,(%rax)
    21d0:	00 41 0e             	add    %al,0xe(%rcx)
    21d3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21d9:	02 51 0c             	add    0xc(%rcx),%dl
    21dc:	07                   	(bad)  
    21dd:	08 00                	or     %al,(%rax)
    21df:	00 1c 00             	add    %bl,(%rax,%rax,1)
    21e2:	00 00                	add    %al,(%rax)
    21e4:	7c 00                	jl     21e6 <__GNU_EH_FRAME_HDR+0x16a>
    21e6:	00 00                	add    %al,(%rax)
    21e8:	93                   	xchg   %eax,%ebx
    21e9:	f0 ff                	lock (bad) 
    21eb:	ff 03                	incl   (%rbx)
    21ed:	01 00                	add    %eax,(%rax)
    21ef:	00 00                	add    %al,(%rax)
    21f1:	41 0e                	rex.B (bad) 
    21f3:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    21f9:	02 fe                	add    %dh,%bh
    21fb:	0c 07                	or     $0x7,%al
    21fd:	08 00                	or     %al,(%rax)
    21ff:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2202:	00 00                	add    %al,(%rax)
    2204:	9c                   	pushfq 
    2205:	00 00                	add    %al,(%rax)
    2207:	00 76 f1             	add    %dh,-0xf(%rsi)
    220a:	ff                   	(bad)  
    220b:	ff c0                	inc    %eax
    220d:	00 00                	add    %al,(%rax)
    220f:	00 00                	add    %al,(%rax)
    2211:	41 0e                	rex.B (bad) 
    2213:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2219:	02 bb 0c 07 08 00    	add    0x8070c(%rbx),%bh
    221f:	00 1c 00             	add    %bl,(%rax,%rax,1)
    2222:	00 00                	add    %al,(%rax)
    2224:	bc 00 00 00 16       	mov    $0x16000000,%esp
    2229:	f2 ff                	repnz (bad) 
    222b:	ff 96 01 00 00 00    	callq  *0x1(%rsi)
    2231:	41 0e                	rex.B (bad) 
    2233:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2239:	03 91 01 0c 07 08    	add    0x8070c01(%rcx),%edx
    223f:	00 20                	add    %ah,(%rax)
    2241:	00 00                	add    %al,(%rax)
    2243:	00 dc                	add    %bl,%ah
    2245:	00 00                	add    %al,(%rax)
    2247:	00 8c f3 ff ff 6f 00 	add    %cl,0x6fffff(%rbx,%rsi,8)
    224e:	00 00                	add    %al,(%rax)
    2250:	00 41 0e             	add    %al,0xe(%rcx)
    2253:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2259:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    225d:	65 0c 07             	gs or  $0x7,%al
    2260:	08 00                	or     %al,(%rax)
    2262:	00 00                	add    %al,(%rax)
    2264:	20 00                	and    %al,(%rax)
    2266:	00 00                	add    %al,(%rax)
    2268:	00 01                	add    %al,(%rcx)
    226a:	00 00                	add    %al,(%rax)
    226c:	d7                   	xlat   %ds:(%rbx)
    226d:	f3 ff                	repz (bad) 
    226f:	ff 74 01 00          	pushq  0x0(%rcx,%rax,1)
    2273:	00 00                	add    %al,(%rax)
    2275:	41 0e                	rex.B (bad) 
    2277:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    227d:	03 6f 01             	add    0x1(%rdi),%ebp
    2280:	0c 07                	or     $0x7,%al
    2282:	08 00                	or     %al,(%rax)
    2284:	00 00                	add    %al,(%rax)
    2286:	00 00                	add    %al,(%rax)
    2288:	1c 00                	sbb    $0x0,%al
    228a:	00 00                	add    %al,(%rax)
    228c:	24 01                	and    $0x1,%al
    228e:	00 00                	add    %al,(%rax)
    2290:	27                   	(bad)  
    2291:	f5                   	cmc    
    2292:	ff                   	(bad)  
    2293:	ff 2f                	ljmp   *(%rdi)
    2295:	01 00                	add    %eax,(%rax)
    2297:	00 00                	add    %al,(%rax)
    2299:	41 0e                	rex.B (bad) 
    229b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22a1:	03 2a                	add    (%rdx),%ebp
    22a3:	01 0c 07             	add    %ecx,(%rdi,%rax,1)
    22a6:	08 00                	or     %al,(%rax)
    22a8:	1c 00                	sbb    $0x0,%al
    22aa:	00 00                	add    %al,(%rax)
    22ac:	44 01 00             	add    %r8d,(%rax)
    22af:	00 36                	add    %dh,(%rsi)
    22b1:	f6 ff                	idiv   %bh
    22b3:	ff                   	(bad)  
    22b4:	7f 00                	jg     22b6 <__GNU_EH_FRAME_HDR+0x23a>
    22b6:	00 00                	add    %al,(%rax)
    22b8:	00 41 0e             	add    %al,0xe(%rcx)
    22bb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22c1:	02 7a 0c             	add    0xc(%rdx),%bh
    22c4:	07                   	(bad)  
    22c5:	08 00                	or     %al,(%rax)
    22c7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ca:	00 00                	add    %al,(%rax)
    22cc:	64 01 00             	add    %eax,%fs:(%rax)
    22cf:	00 95 f6 ff ff 53    	add    %dl,0x53fffff6(%rbp)
    22d5:	00 00                	add    %al,(%rax)
    22d7:	00 00                	add    %al,(%rax)
    22d9:	41 0e                	rex.B (bad) 
    22db:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    22e1:	02 4e 0c             	add    0xc(%rsi),%cl
    22e4:	07                   	(bad)  
    22e5:	08 00                	or     %al,(%rax)
    22e7:	00 1c 00             	add    %bl,(%rax,%rax,1)
    22ea:	00 00                	add    %al,(%rax)
    22ec:	84 01                	test   %al,(%rcx)
    22ee:	00 00                	add    %al,(%rax)
    22f0:	c8 f6 ff ff          	enterq $0xfff6,$0xff
    22f4:	af                   	scas   %es:(%rdi),%eax
    22f5:	00 00                	add    %al,(%rax)
    22f7:	00 00                	add    %al,(%rax)
    22f9:	41 0e                	rex.B (bad) 
    22fb:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2301:	02 aa 0c 07 08 00    	add    0x8070c(%rdx),%ch
    2307:	00 1c 00             	add    %bl,(%rax,%rax,1)
    230a:	00 00                	add    %al,(%rax)
    230c:	a4                   	movsb  %ds:(%rsi),%es:(%rdi)
    230d:	01 00                	add    %eax,(%rax)
    230f:	00 57 f7             	add    %dl,-0x9(%rdi)
    2312:	ff                   	(bad)  
    2313:	ff 48 00             	decl   0x0(%rax)
    2316:	00 00                	add    %al,(%rax)
    2318:	00 41 0e             	add    %al,0xe(%rcx)
    231b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2321:	02 43 0c             	add    0xc(%rbx),%al
    2324:	07                   	(bad)  
    2325:	08 00                	or     %al,(%rax)
    2327:	00 1c 00             	add    %bl,(%rax,%rax,1)
    232a:	00 00                	add    %al,(%rax)
    232c:	c4 01 00 00          	(bad)
    2330:	7f f7                	jg     2329 <__GNU_EH_FRAME_HDR+0x2ad>
    2332:	ff                   	(bad)  
    2333:	ff 51 00             	callq  *0x0(%rcx)
    2336:	00 00                	add    %al,(%rax)
    2338:	00 41 0e             	add    %al,0xe(%rcx)
    233b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2341:	02 4c 0c 07          	add    0x7(%rsp,%rcx,1),%cl
    2345:	08 00                	or     %al,(%rax)
    2347:	00 20                	add    %ah,(%rax)
    2349:	00 00                	add    %al,(%rax)
    234b:	00 e4                	add    %ah,%ah
    234d:	01 00                	add    %eax,(%rax)
    234f:	00 b0 f7 ff ff 03    	add    %dh,0x3fffff7(%rax)
    2355:	01 00                	add    %eax,(%rax)
    2357:	00 00                	add    %al,(%rax)
    2359:	41 0e                	rex.B (bad) 
    235b:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2361:	45 83 03 02          	rex.RB addl $0x2,(%r11)
    2365:	f9                   	stc    
    2366:	0c 07                	or     $0x7,%al
    2368:	08 00                	or     %al,(%rax)
    236a:	00 00                	add    %al,(%rax)
    236c:	1c 00                	sbb    $0x0,%al
    236e:	00 00                	add    %al,(%rax)
    2370:	08 02                	or     %al,(%rdx)
    2372:	00 00                	add    %al,(%rax)
    2374:	8f                   	(bad)  
    2375:	f8                   	clc    
    2376:	ff                   	(bad)  
    2377:	ff 67 00             	jmpq   *0x0(%rdi)
    237a:	00 00                	add    %al,(%rax)
    237c:	00 41 0e             	add    %al,0xe(%rcx)
    237f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    2385:	02 62 0c             	add    0xc(%rdx),%ah
    2388:	07                   	(bad)  
    2389:	08 00                	or     %al,(%rax)
    238b:	00 1c 00             	add    %bl,(%rax,%rax,1)
    238e:	00 00                	add    %al,(%rax)
    2390:	28 02                	sub    %al,(%rdx)
    2392:	00 00                	add    %al,(%rax)
    2394:	d6                   	(bad)  
    2395:	f8                   	clc    
    2396:	ff                   	(bad)  
    2397:	ff 6e 00             	ljmp   *0x0(%rsi)
    239a:	00 00                	add    %al,(%rax)
    239c:	00 41 0e             	add    %al,0xe(%rcx)
    239f:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23a5:	02 69 0c             	add    0xc(%rcx),%ch
    23a8:	07                   	(bad)  
    23a9:	08 00                	or     %al,(%rax)
    23ab:	00 1c 00             	add    %bl,(%rax,%rax,1)
    23ae:	00 00                	add    %al,(%rax)
    23b0:	48 02 00             	rex.W add (%rax),%al
    23b3:	00 24 f9             	add    %ah,(%rcx,%rdi,8)
    23b6:	ff                   	(bad)  
    23b7:	ff 37                	pushq  (%rdi)
    23b9:	00 00                	add    %al,(%rax)
    23bb:	00 00                	add    %al,(%rax)
    23bd:	41 0e                	rex.B (bad) 
    23bf:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23c5:	72 0c                	jb     23d3 <__GNU_EH_FRAME_HDR+0x357>
    23c7:	07                   	(bad)  
    23c8:	08 00                	or     %al,(%rax)
    23ca:	00 00                	add    %al,(%rax)
    23cc:	20 00                	and    %al,(%rax)
    23ce:	00 00                	add    %al,(%rax)
    23d0:	68 02 00 00 3b       	pushq  $0x3b000002
    23d5:	f9                   	stc    
    23d6:	ff                   	(bad)  
    23d7:	ff 30                	pushq  (%rax)
    23d9:	01 00                	add    %eax,(%rax)
    23db:	00 00                	add    %al,(%rax)
    23dd:	41 0e                	rex.B (bad) 
    23df:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
    23e5:	45 83 03 03          	rex.RB addl $0x3,(%r11)
    23e9:	26 01 0c 07          	add    %ecx,%es:(%rdi,%rax,1)
    23ed:	08 00                	or     %al,(%rax)
    23ef:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
    23f3:	00 8c 02 00 00 48 fa 	add    %cl,-0x5b80000(%rdx,%rax,1)
    23fa:	ff                   	(bad)  
    23fb:	ff 5d 00             	lcall  *0x0(%rbp)
    23fe:	00 00                	add    %al,(%rax)
    2400:	00 42 0e             	add    %al,0xe(%rdx)
    2403:	10 8f 02 49 0e 18    	adc    %cl,0x180e4902(%rdi)
    2409:	8e 03                	mov    (%rbx),%es
    240b:	45 0e                	rex.RB (bad) 
    240d:	20 8d 04 45 0e 28    	and    %cl,0x280e4504(%rbp)
    2413:	8c 05 44 0e 30 86    	mov    %es,-0x79cff1bc(%rip)        # ffffffff8630325d <_end+0xffffffff862ff1ad>
    2419:	06                   	(bad)  
    241a:	48 0e                	rex.W (bad) 
    241c:	38 83 07 47 0e 40    	cmp    %al,0x400e4707(%rbx)
    2422:	6a 0e                	pushq  $0xe
    2424:	38 41 0e             	cmp    %al,0xe(%rcx)
    2427:	30 41 0e             	xor    %al,0xe(%rcx)
    242a:	28 42 0e             	sub    %al,0xe(%rdx)
    242d:	20 42 0e             	and    %al,0xe(%rdx)
    2430:	18 42 0e             	sbb    %al,0xe(%rdx)
    2433:	10 42 0e             	adc    %al,0xe(%rdx)
    2436:	08 00                	or     %al,(%rax)
    2438:	10 00                	adc    %al,(%rax)
    243a:	00 00                	add    %al,(%rax)
    243c:	d4                   	(bad)  
    243d:	02 00                	add    (%rax),%al
    243f:	00 60 fa             	add    %ah,-0x6(%rax)
    2442:	ff                   	(bad)  
    2443:	ff 01                	incl   (%rcx)
    2445:	00 00                	add    %al,(%rax)
    2447:	00 00                	add    %al,(%rax)
    2449:	00 00                	add    %al,(%rax)
	...

000000000000244c <__FRAME_END__>:
    244c:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000003de8 <__frame_dummy_init_array_entry>:
    3de8:	20 12                	and    %dl,(%rdx)
    3dea:	00 00                	add    %al,(%rax)
    3dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000003df0 <__do_global_dtors_aux_fini_array_entry>:
    3df0:	e0 11                	loopne 3e03 <_DYNAMIC+0xb>
    3df2:	00 00                	add    %al,(%rax)
    3df4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000003df8 <_DYNAMIC>:
    3df8:	01 00                	add    %eax,(%rax)
    3dfa:	00 00                	add    %al,(%rax)
    3dfc:	00 00                	add    %al,(%rax)
    3dfe:	00 00                	add    %al,(%rax)
    3e00:	96                   	xchg   %eax,%esi
    3e01:	00 00                	add    %al,(%rax)
    3e03:	00 00                	add    %al,(%rax)
    3e05:	00 00                	add    %al,(%rax)
    3e07:	00 0c 00             	add    %cl,(%rax,%rax,1)
    3e0a:	00 00                	add    %al,(%rax)
    3e0c:	00 00                	add    %al,(%rax)
    3e0e:	00 00                	add    %al,(%rax)
    3e10:	00 10                	add    %dl,(%rax)
    3e12:	00 00                	add    %al,(%rax)
    3e14:	00 00                	add    %al,(%rax)
    3e16:	00 00                	add    %al,(%rax)
    3e18:	0d 00 00 00 00       	or     $0x0,%eax
    3e1d:	00 00                	add    %al,(%rax)
    3e1f:	00 a4 1e 00 00 00 00 	add    %ah,0x0(%rsi,%rbx,1)
    3e26:	00 00                	add    %al,(%rax)
    3e28:	19 00                	sbb    %eax,(%rax)
    3e2a:	00 00                	add    %al,(%rax)
    3e2c:	00 00                	add    %al,(%rax)
    3e2e:	00 00                	add    %al,(%rax)
    3e30:	e8 3d 00 00 00       	callq  3e72 <_DYNAMIC+0x7a>
    3e35:	00 00                	add    %al,(%rax)
    3e37:	00 1b                	add    %bl,(%rbx)
    3e39:	00 00                	add    %al,(%rax)
    3e3b:	00 00                	add    %al,(%rax)
    3e3d:	00 00                	add    %al,(%rax)
    3e3f:	00 08                	add    %cl,(%rax)
    3e41:	00 00                	add    %al,(%rax)
    3e43:	00 00                	add    %al,(%rax)
    3e45:	00 00                	add    %al,(%rax)
    3e47:	00 1a                	add    %bl,(%rdx)
    3e49:	00 00                	add    %al,(%rax)
    3e4b:	00 00                	add    %al,(%rax)
    3e4d:	00 00                	add    %al,(%rax)
    3e4f:	00 f0                	add    %dh,%al
    3e51:	3d 00 00 00 00       	cmp    $0x0,%eax
    3e56:	00 00                	add    %al,(%rax)
    3e58:	1c 00                	sbb    $0x0,%al
    3e5a:	00 00                	add    %al,(%rax)
    3e5c:	00 00                	add    %al,(%rax)
    3e5e:	00 00                	add    %al,(%rax)
    3e60:	08 00                	or     %al,(%rax)
    3e62:	00 00                	add    %al,(%rax)
    3e64:	00 00                	add    %al,(%rax)
    3e66:	00 00                	add    %al,(%rax)
    3e68:	f5                   	cmc    
    3e69:	fe                   	(bad)  
    3e6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3e6d:	00 00                	add    %al,(%rax)
    3e6f:	00 08                	add    %cl,(%rax)
    3e71:	03 00                	add    (%rax),%eax
    3e73:	00 00                	add    %al,(%rax)
    3e75:	00 00                	add    %al,(%rax)
    3e77:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 3e7d <_DYNAMIC+0x85>
    3e7d:	00 00                	add    %al,(%rax)
    3e7f:	00 40 05             	add    %al,0x5(%rax)
    3e82:	00 00                	add    %al,(%rax)
    3e84:	00 00                	add    %al,(%rax)
    3e86:	00 00                	add    %al,(%rax)
    3e88:	06                   	(bad)  
    3e89:	00 00                	add    %al,(%rax)
    3e8b:	00 00                	add    %al,(%rax)
    3e8d:	00 00                	add    %al,(%rax)
    3e8f:	00 30                	add    %dh,(%rax)
    3e91:	03 00                	add    (%rax),%eax
    3e93:	00 00                	add    %al,(%rax)
    3e95:	00 00                	add    %al,(%rax)
    3e97:	00 0a                	add    %cl,(%rdx)
    3e99:	00 00                	add    %al,(%rax)
    3e9b:	00 00                	add    %al,(%rax)
    3e9d:	00 00                	add    %al,(%rax)
    3e9f:	00 07                	add    %al,(%rdi)
    3ea1:	01 00                	add    %eax,(%rax)
    3ea3:	00 00                	add    %al,(%rax)
    3ea5:	00 00                	add    %al,(%rax)
    3ea7:	00 0b                	add    %cl,(%rbx)
    3ea9:	00 00                	add    %al,(%rax)
    3eab:	00 00                	add    %al,(%rax)
    3ead:	00 00                	add    %al,(%rax)
    3eaf:	00 18                	add    %bl,(%rax)
    3eb1:	00 00                	add    %al,(%rax)
    3eb3:	00 00                	add    %al,(%rax)
    3eb5:	00 00                	add    %al,(%rax)
    3eb7:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 3ebd <_DYNAMIC+0xc5>
	...
    3ec5:	00 00                	add    %al,(%rax)
    3ec7:	00 03                	add    %al,(%rbx)
	...
    3ed1:	40 00 00             	add    %al,(%rax)
    3ed4:	00 00                	add    %al,(%rax)
    3ed6:	00 00                	add    %al,(%rax)
    3ed8:	02 00                	add    (%rax),%al
    3eda:	00 00                	add    %al,(%rax)
    3edc:	00 00                	add    %al,(%rax)
    3ede:	00 00                	add    %al,(%rax)
    3ee0:	80 01 00             	addb   $0x0,(%rcx)
    3ee3:	00 00                	add    %al,(%rax)
    3ee5:	00 00                	add    %al,(%rax)
    3ee7:	00 14 00             	add    %dl,(%rax,%rax,1)
    3eea:	00 00                	add    %al,(%rax)
    3eec:	00 00                	add    %al,(%rax)
    3eee:	00 00                	add    %al,(%rax)
    3ef0:	07                   	(bad)  
    3ef1:	00 00                	add    %al,(%rax)
    3ef3:	00 00                	add    %al,(%rax)
    3ef5:	00 00                	add    %al,(%rax)
    3ef7:	00 17                	add    %dl,(%rdi)
    3ef9:	00 00                	add    %al,(%rax)
    3efb:	00 00                	add    %al,(%rax)
    3efd:	00 00                	add    %al,(%rax)
    3eff:	00 78 07             	add    %bh,0x7(%rax)
    3f02:	00 00                	add    %al,(%rax)
    3f04:	00 00                	add    %al,(%rax)
    3f06:	00 00                	add    %al,(%rax)
    3f08:	07                   	(bad)  
    3f09:	00 00                	add    %al,(%rax)
    3f0b:	00 00                	add    %al,(%rax)
    3f0d:	00 00                	add    %al,(%rax)
    3f0f:	00 b8 06 00 00 00    	add    %bh,0x6(%rax)
    3f15:	00 00                	add    %al,(%rax)
    3f17:	00 08                	add    %cl,(%rax)
    3f19:	00 00                	add    %al,(%rax)
    3f1b:	00 00                	add    %al,(%rax)
    3f1d:	00 00                	add    %al,(%rax)
    3f1f:	00 c0                	add    %al,%al
    3f21:	00 00                	add    %al,(%rax)
    3f23:	00 00                	add    %al,(%rax)
    3f25:	00 00                	add    %al,(%rax)
    3f27:	00 09                	add    %cl,(%rcx)
    3f29:	00 00                	add    %al,(%rax)
    3f2b:	00 00                	add    %al,(%rax)
    3f2d:	00 00                	add    %al,(%rax)
    3f2f:	00 18                	add    %bl,(%rax)
    3f31:	00 00                	add    %al,(%rax)
    3f33:	00 00                	add    %al,(%rax)
    3f35:	00 00                	add    %al,(%rax)
    3f37:	00 fb                	add    %bh,%bl
    3f39:	ff                   	(bad)  
    3f3a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f3d:	00 00                	add    %al,(%rax)
    3f3f:	00 00                	add    %al,(%rax)
    3f41:	00 00                	add    %al,(%rax)
    3f43:	08 00                	or     %al,(%rax)
    3f45:	00 00                	add    %al,(%rax)
    3f47:	00 fe                	add    %bh,%dh
    3f49:	ff                   	(bad)  
    3f4a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f4d:	00 00                	add    %al,(%rax)
    3f4f:	00 78 06             	add    %bh,0x6(%rax)
    3f52:	00 00                	add    %al,(%rax)
    3f54:	00 00                	add    %al,(%rax)
    3f56:	00 00                	add    %al,(%rax)
    3f58:	ff                   	(bad)  
    3f59:	ff                   	(bad)  
    3f5a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f5d:	00 00                	add    %al,(%rax)
    3f5f:	00 01                	add    %al,(%rcx)
    3f61:	00 00                	add    %al,(%rax)
    3f63:	00 00                	add    %al,(%rax)
    3f65:	00 00                	add    %al,(%rax)
    3f67:	00 f0                	add    %dh,%al
    3f69:	ff                   	(bad)  
    3f6a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f6d:	00 00                	add    %al,(%rax)
    3f6f:	00 48 06             	add    %cl,0x6(%rax)
    3f72:	00 00                	add    %al,(%rax)
    3f74:	00 00                	add    %al,(%rax)
    3f76:	00 00                	add    %al,(%rax)
    3f78:	f9                   	stc    
    3f79:	ff                   	(bad)  
    3f7a:	ff 6f 00             	ljmp   *0x0(%rdi)
    3f7d:	00 00                	add    %al,(%rax)
    3f7f:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .got:

0000000000003fd8 <.got>:
	...

Disassembly of section .got.plt:

0000000000004000 <_GLOBAL_OFFSET_TABLE_>:
    4000:	f8                   	clc    
    4001:	3d 00 00 00 00       	cmp    $0x0,%eax
	...
    4016:	00 00                	add    %al,(%rax)
    4018:	36 10 00             	adc    %al,%ss:(%rax)
    401b:	00 00                	add    %al,(%rax)
    401d:	00 00                	add    %al,(%rax)
    401f:	00 46 10             	add    %al,0x10(%rsi)
    4022:	00 00                	add    %al,(%rax)
    4024:	00 00                	add    %al,(%rax)
    4026:	00 00                	add    %al,(%rax)
    4028:	56                   	push   %rsi
    4029:	10 00                	adc    %al,(%rax)
    402b:	00 00                	add    %al,(%rax)
    402d:	00 00                	add    %al,(%rax)
    402f:	00 66 10             	add    %ah,0x10(%rsi)
    4032:	00 00                	add    %al,(%rax)
    4034:	00 00                	add    %al,(%rax)
    4036:	00 00                	add    %al,(%rax)
    4038:	76 10                	jbe    404a <_GLOBAL_OFFSET_TABLE_+0x4a>
    403a:	00 00                	add    %al,(%rax)
    403c:	00 00                	add    %al,(%rax)
    403e:	00 00                	add    %al,(%rax)
    4040:	86 10                	xchg   %dl,(%rax)
    4042:	00 00                	add    %al,(%rax)
    4044:	00 00                	add    %al,(%rax)
    4046:	00 00                	add    %al,(%rax)
    4048:	96                   	xchg   %eax,%esi
    4049:	10 00                	adc    %al,(%rax)
    404b:	00 00                	add    %al,(%rax)
    404d:	00 00                	add    %al,(%rax)
    404f:	00 a6 10 00 00 00    	add    %ah,0x10(%rsi)
    4055:	00 00                	add    %al,(%rax)
    4057:	00 b6 10 00 00 00    	add    %dh,0x10(%rsi)
    405d:	00 00                	add    %al,(%rax)
    405f:	00 c6                	add    %al,%dh
    4061:	10 00                	adc    %al,(%rax)
    4063:	00 00                	add    %al,(%rax)
    4065:	00 00                	add    %al,(%rax)
    4067:	00 d6                	add    %dl,%dh
    4069:	10 00                	adc    %al,(%rax)
    406b:	00 00                	add    %al,(%rax)
    406d:	00 00                	add    %al,(%rax)
    406f:	00 e6                	add    %ah,%dh
    4071:	10 00                	adc    %al,(%rax)
    4073:	00 00                	add    %al,(%rax)
    4075:	00 00                	add    %al,(%rax)
    4077:	00 f6                	add    %dh,%dh
    4079:	10 00                	adc    %al,(%rax)
    407b:	00 00                	add    %al,(%rax)
    407d:	00 00                	add    %al,(%rax)
    407f:	00 06                	add    %al,(%rsi)
    4081:	11 00                	adc    %eax,(%rax)
    4083:	00 00                	add    %al,(%rax)
    4085:	00 00                	add    %al,(%rax)
    4087:	00 16                	add    %dl,(%rsi)
    4089:	11 00                	adc    %eax,(%rax)
    408b:	00 00                	add    %al,(%rax)
    408d:	00 00                	add    %al,(%rax)
    408f:	00 26                	add    %ah,(%rsi)
    4091:	11 00                	adc    %eax,(%rax)
    4093:	00 00                	add    %al,(%rax)
    4095:	00 00                	add    %al,(%rax)
	...

Disassembly of section .data:

0000000000004098 <__data_start>:
	...

00000000000040a0 <__dso_handle>:
    40a0:	a0                   	.byte 0xa0
    40a1:	40 00 00             	add    %al,(%rax)
    40a4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

00000000000040a8 <completed.0>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 44 65 62          	sub    %al,0x62(%rbp,%riz,2)
   9:	69 61 6e 20 31 30 2e 	imul   $0x2e303120,0x6e(%rcx),%esp
  10:	32 2e                	xor    (%rsi),%ch
  12:	31 2d 36 29 20 31    	xor    %ebp,0x31202936(%rip)        # 3120294e <_end+0x311fe89e>
  18:	30 2e                	xor    %ch,(%rsi)
  1a:	32 2e                	xor    (%rsi),%ch
  1c:	31 20                	xor    %esp,(%rax)
  1e:	32 30                	xor    (%rax),%dh
  20:	32 31                	xor    (%rcx),%dh
  22:	30 31                	xor    %dh,(%rcx)
  24:	31 30                	xor    %esi,(%rax)
	...
